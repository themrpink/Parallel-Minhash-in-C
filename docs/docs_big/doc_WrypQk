}
&lt;/syntaxhighlight&gt;

== See also ==
{{Portal|Computer programming}}
* [[Web container]]
* [[Deployment descriptor]]
* [[Java BluePrints]]
* [[Sun Java System Portal Server]]
* [[Sun Community Source License]]
* [[Java Research License]]

== References ==
{{Reflist}}

==External links==
{{Commons category|Jakarta EE}}
* {{Official website}}
* {{cite book |last=Gupta |first=Arun |date=2013 |title=Java EE 7 Essentials |url=http://shop.oreilly.com/product/0636920030614.do |publisher=O’Reilly}}
* {{cite book |last=Goncalves |first=Antonio |date=2013 |title=Beginning Java EE 7 |url=https://www.apress.com/gp/book/9781430246268 |publisher=APress}}
* [http://www.oracle.com/technetwork/java/javaee/overview/index.html Oracle Technology Network's Java EE]
* [http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html Oracle's Java EE Compatibility page] - Certified Java EE Compatible Implementations
* [http://java.sun.com/blueprints/corej2eepatterns/Patterns/index.html Core J2EE Patterns]
* [http://docs.oracle.com/javaee/7/firstcup/index.html A short tutorial introducing beginning Java EE developers to the Java EE platform]

{{Jakarta EE}}
{{Java (software platform)}}

[[Category:Articles with example Java code]]
[[Category:Computing platforms]]
[[Category:Java enterprise platform| ]]
[[Category:Java platform|Platform, Enterprise Edition]]
[[Category:Java specification requests|Platform, Enterprise Edition]]
[[Category:Web frameworks]]</text>
      <sha1>s9c48fotn0x6x6fgdy3scs5p6tfua34</sha1>
    </revision>
  </page>
  <page>
    <title>Java Platform, Micro Edition</title>
    <ns>0</ns>
    <id>42870</id>
    <revision>
      <id>991551358</id>
      <parentid>981799982</parentid>
      <timestamp>2020-11-30T17:29:16Z</timestamp>
      <contributor>
        <username>Jerri Kohl</username>
        <id>1322043</id>
      </contributor>
      <minor />
      <comment>/* Implementations */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="18506" xml:space="preserve">{{Use mdy dates|date=October 2020}}
{{Java platforms}}

'''Java Platform, Micro Edition''' or '''Java&amp;nbsp;ME''' is a [[computing platform]] for development and deployment of [[porting|portable code]] for [[embedded system|embedded]] and [[mobile device]]s (micro-controllers, sensors, gateways, mobile phones, personal digital assistants, TV set-top boxes, printers).&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/embedded/javame/index.html|title=Java ME Overview|accessdate=February 26, 2017|publisher=[[Oracle Corporation]]}}&lt;/ref&gt; Java&amp;nbsp;ME was formerly known as '''Java 2 Platform, Micro Edition''' or '''J2ME'''.

The platform uses the [[object-oriented programming|object-oriented]] [[java (programming language)|Java]] programming language. It is part of the [[Java (software platform)|Java software-platform]] family. Java&amp;nbsp;ME was designed by [[Sun Microsystems]], acquired by [[Oracle Corporation]] in 2010; the platform replaced a similar technology, [[PersonalJava]]. Originally developed under the [[Java Community Process]] as JSR 68, the different flavors of Java&amp;nbsp;ME have evolved in separate JSRs. Oracle provides a [[reference implementation]] of the specification, but has tended not to provide free binary implementations of its Java&amp;nbsp;ME runtime environment for mobile devices, rather relying on third parties to provide their own.

As of December 22, 2006, the Java&amp;nbsp;ME source code is licensed under the [[GNU General Public License]], and is released under the project name [[phoneME]].

As of 2008, all Java&amp;nbsp;ME platforms are currently restricted to [[Java Virtual Machine|JRE]] 1.3 features and use that version of the class file format (internally known as version 47.0). Should Oracle ever declare a new round of Java&amp;nbsp;ME configuration versions that support the later class file formats and language features, such as those corresponding to JRE 1.5 or 1.6 (notably, [[Generics in Java|generics]]), it will entail extra work on the part of all platform vendors to update their JREs.{{speculation inline}}

Java ME devices implement a ''profile''. The most common of these are the [[Mobile Information Device Profile]] aimed at mobile devices, such as cell phones, and the [[Personal Profile]] aimed at consumer products and embedded devices like [[set-top box]]es and PDAs. Profiles are subsets of ''configurations'', of which there are currently two: the Connected Limited Device Configuration (CLDC) and the Connected Device Configuration (CDC).&lt;ref&gt;[http://java.sun.com/javame/technology/ Java ME Technology]&lt;/ref&gt;

There are more than 2.1 billion Java&amp;nbsp;ME enabled mobile phones and PDAs.&lt;ref&gt;[http://www.java.com/en/about/ About Java]&lt;/ref&gt;{{when|date=January 2020}} It is popular in sub-£50 devices such as Nokia's [[Smart Feature OS]]. It was also used on the [[Bada]] operating system and on [[Symbian]] OS along with native software. Users of [[Windows CE]], [[Windows Mobile]], [[Maemo]], [[MeeGo]] and [[Android software development|Android]] can download Java&amp;nbsp;ME for their respective environments (&quot;proof-of-concept&quot; for Android).&lt;ref&gt;
[http://davy.preuveneers.be/phoneme/ phoneME for Windows CE, Windows Mobile and Android (development stopped in 2011-06-15)]&lt;/ref&gt;&lt;ref&gt;{{Cite web |url=http://www.netmite.com/android/ |title=App Runner (development stopped in 2010-05-11) |access-date=August 5, 2012 |archive-url=https://web.archive.org/web/20120103192628/http://www.netmite.com/android/ |archive-date=January 3, 2012 |url-status=dead }}&lt;/ref&gt;

== Connected Limited Device Configuration ==
{{Main|Connected Limited Device Configuration}}
The [[Connected Limited Device Configuration]] (CLDC) contains a strict subset of the Java-class libraries, and is the minimum amount needed for a [[Java virtual machine]] to operate. CLDC is basically used for classifying myriad devices into a fixed configuration.

A configuration provides the most basic set of libraries and virtual-machine features that must be present in each implementation of a J2ME environment. When coupled with one or more profiles, the Connected Limited Device Configuration gives developers a solid Java platform for creating applications for consumer and embedded devices.
The configuration is designed for devices with 160KB to 512KB total memory, which has a minimum of 160KB of ROM and 32KB of RAM available for the Java platform.

=== Mobile Information Device Profile ===
Designed for mobile phones, the [[Mobile Information Device Profile]] includes a [[Graphical user interface|GUI]], and a data storage API, and MIDP 2.0 includes a basic 2D gaming [[Application programming interface|API]]. Applications written for this profile are called [[MIDlet]]s. Almost all new cell phones come with a MIDP implementation, and it is now the [[de facto]] standard for downloadable cell phone games. However, many cellphones can run only those MIDlets that have been approved by the carrier, especially in North America.{{Citation needed|date=December 2007}}

''JSR 271: Mobile Information Device Profile 3'' (Final release on Dec 9, 2009) specified the 3rd generation Mobile Information Device Profile (MIDP3), expanding upon the functionality in all areas as well as improving interoperability across devices. A key design goal of MIDP3 is backward compatibility with MIDP2 content.

==== Information Module Profile ====
The [[Information Module Profile]] (IMP) is a profile for embedded, &quot;headless&quot; devices such as vending machines, industrial embedded applications, security systems, and similar devices with either simple or no display and with some limited network connectivity.

Originally introduced by [[Siemens AG|Siemens Mobile]] and [[Nokia]] as [[Java Specification Request|JSR]]-195, IMP 1.0 is a strict subset of [[MIDP]] 1.0 except that it doesn't include [[user interface]] APIs &amp;mdash; in other words, it doesn't include support for the Java package &lt;code&gt;javax.microedition.lcdui&lt;/code&gt;. JSR-228, also known as IMP-NG, is IMP's next generation that is based on [[MIDP]] 2.0, leveraging [[MIDP]] 2.0's new security and networking types and APIs, and other APIs such as &lt;code&gt;PushRegistry&lt;/code&gt; and &lt;code&gt;platformRequest()&lt;/code&gt;, but again it doesn't include UI APIs, nor the game API.

== Connected Device Configuration ==
{{Main|Connected Device Configuration}}

The [[Connected Device Configuration]] is a subset of [[Java SE]], containing almost all the libraries that are not GUI related. It is richer than CLDC.

=== Foundation Profile ===
The Foundation Profile is a Java&amp;nbsp;ME Connected Device Configuration (CDC) profile. This profile is intended to be used by devices requiring a complete implementation of the Java virtual machine up to and including the entire Java Platform, Standard Edition API. Typical implementations will use some subset of that API set depending on the additional profiles supported. This specification was developed under the Java Community Process.

=== Personal Basis Profile ===
The Personal Basis Profile extends the Foundation Profile to include lightweight GUI support in the form of an [[Abstract Window Toolkit|AWT]] subset. This is the platform that [[BD-J]] is built upon.

== Implementations ==
Sun provides a [[reference implementation]] of these configurations and profiles for MIDP and CDC. Starting with the JavaME 3.0 SDK, a [[NetBeans]]-based IDE will support them in a single IDE.

In contrast to the numerous binary implementations of the Java Platform built by Sun for servers and workstations, Sun does not provide any binaries for the platforms of Java&amp;nbsp;ME targets with the exception of an MIDP 1.0 JRE (JVM) for Palm OS.&lt;ref&gt;[http://developers.sun.com/mobility/midp/articles/palm/ MIDP for Palm OS 1.0: Developing Java Applications for Palm OS Devices] January 2002&lt;/ref&gt; Sun provides no J2ME JRE for the [[Microsoft Windows Mobile]] (Pocket PC) based devices, despite an open-letter campaign to Sun to release a rumored internal implementation of [[PersonalJava]] known by the code name &quot;Captain America&quot;.&lt;ref&gt;[http://forum.java.sun.com/thread.jspa?threadID=408223 CDC and Personal Profile - Open letter to SUN to produce a Personal Java JRE for Pocket PC] 2003&lt;/ref&gt; Third party implementations  are widely used by Windows Mobile vendors.

Operating systems targeting Java ME have been implemented by [[NTT DoCoMo|DoCoMo]] in the form of [[DoJa]], and by [[SavaJe]] as SavaJe OS. The latter company was purchased by Sun in April 2007 and now forms the basis of Sun's [[JavaFX Mobile]].

The open-source [[Mika VM]] aims to implement JavaME CDC/FP, but is not certified as such (certified implementations are required to charge royalties, which is impractical for an open-source project). Consequently, devices which use this implementation are not allowed to claim JavaME CDC compatibility.

The Linux-based Android operating system uses a proprietary version of Java that is similar in intent, but very different in many ways from Java Me.&lt;ref&gt;[http://kevinboone.net/android_j2me.html Mobile application development: Android compared to J2ME] Feb 2013&lt;/ref&gt;

== JSRs (Java Specification Requests) ==

=== Foundation ===
{| class=&quot;wikitable&quot;
|-
!JSR #!!Name!!Description
|-
| [http://www.jcp.org/en/jsr/detail?id=68 68]||J2ME Platform Specification||
|-
| [http://www.jcp.org/en/jsr/detail?id=30 30]||CLDC 1.x||
|-
| [http://www.jcp.org/en/jsr/detail?id=37 37]||MIDP 1.0||
|-
| [http://www.jcp.org/en/jsr/detail?id=118 118]||MIDP 2.x||
|-
| [http://www.jcp.org/en/jsr/detail?id=139 139]||CLDC 1.1||
|-
| [http://www.jcp.org/en/jsr/detail?id=271 271]||MIDP 3.0||Java ME 3.4 and earlier only, Last Specification for Mobile Phones,  Java Language features as Java SE 1.3
|- 
| [https://jcp.org/en/jsr/detail?id=360 360] ||CLDC 8|| New in Java ME 8
|-
| [https://jcp.org/en/jsr/detail?id=361 361] || MEEP 8|| New in Java ME 8, Language feature as Java SE 8, for [[Internet of Everything]] devices

|}

=== Main extensions ===
{| class=&quot;wikitable&quot;
|-
!JSR #!!Name!!Description!![[Mobile Service Architecture|MSA]]
|-
| [http://www.jcp.org/en/jsr/detail?id=75 75]||File Connection and PIM API||File system, contacts, calendar, to-do||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=82 82]||[[Java APIs for Bluetooth|Bluetooth]]||Bluetooth serial port communications and file exchanges (OBEX)||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=120 120]||Wireless Messaging API (WMA)|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=135 135]||[[Java Mobile Media API|Mobile Media API]] (MMAPI)||Audio, video, multimedia||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=172 172]||Web Services API||XML parsers and RPC||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=177 177]||Security and Trust Services API (SATSA)||APDU, Java Card RMI (JCRMI), Public Key Infrastructure (PKI) and cryptography||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=179 179]||[[Location API for Java ME|Location API]]||GPS coordinates, street addresses, orientation sensors, landmark stores||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=180 180]||SIP API|| ||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=184 184]||[[Mobile 3D Graphics API|Mobile 3D Graphics]] (M3G)||High level 3D graphics||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=185 185]||Java Technology for the Wireless Industry (JTWI)||General||
|- 
| [http://www.jcp.org/en/jsr/detail?id=205 205]||Wireless Messaging API (WMA) 2.0||Sending and receiving SMS and MMS||
|-
| [http://www.jcp.org/en/jsr/detail?id=211 211]||Content Handler API (CHAPI)|| ||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=226 226]||Scalable 2D Vector Graphics API for J2ME (M2G)||Handling SVG Tiny||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=228 228]||Information Module Profile{{snd}} Next Generation (IMP NG)||  ||
|-
| [http://www.jcp.org/en/jsr/detail?id=229 229]||Payment API|| ||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=234 234]||[[Advanced Multimedia Supplements]] (AMMS)||MMAPI extensions||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=238 238]||Mobile Internationalization API||Localized resources, locale date and number formatting, locale comparison of strings||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=239 239]||Java Bindings for the OpenGL ES API|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=248 248]||Mobile Service Architecture (MSA)|| ||{{Ya}}
|-
| [http://www.jcp.org/en/jsr/detail?id=253 253]||Mobile Telephony API|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=256 256]||Mobile Sensor API||Reading values from accelerometers, gyroscopes, compasses, thermometers, barometers, and some more||
|-
| [http://www.jcp.org/en/jsr/detail?id=257 257]||Contactless Communication API|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=258 258]||Mobile User Interface Customization API|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=272 272]||Mobile Broadcast Service API for Handheld Terminals|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=280 280]||XML API for Java ME|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=281 281]||IMS Services API|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=287 287]||Scalable 2D Vector Graphics API 2.0 for Java ME|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=293 293]||Location API 2.0|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=298 298]||Telematics API for Java ME|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=300 300]||DRM API for Java ME|| ||
|-
| [http://www.jcp.org/en/jsr/detail?id=325 325]||IMS Communication Enablers|| ||
|}

=== Future ===
{| class=&quot;wikitable&quot;
|-
!JSR #!!Name!!Description
|-
| [http://www.jcp.org/en/jsr/detail?id=297 297]||Mobile 3D Graphics API (M3G) 2.0||
|}

== ESR ==
The ESR consortium is devoted to Standards for embedded Java. Especially cost effective Standards.
Typical applications domains are industrial control, machine-to-machine, medical, e-metering, [[home automation]], consumer, human-to-machine-interface, ...

{| class=&quot;wikitable&quot;
|-
!ESR #!!Name!!Description
|-
| [http://www.e-s-r.net/specifications/ 001]||B-ON (Beyond CLDC)|| B-ON serves as a very robust foundation for implementing embedded Java software. It specifies a reliable initialization phase of the Java device, and 3 kind of objects: immutable, immortal and regular (mortal) objects.
|-
| [http://www.e-s-r.net/specifications/ 002]||MicroUI||MicroUI defines an enhanced architecture to enable an open, third-party, application development environment for embedded HMI devices. Such devices typically have some form of display, some input sensors and potentially some sound rendering capabilities. This specification spans a potentially wide set of devices.
|-
| [http://www.e-s-r.net/specifications/ 011]||MWT||MWT defines three distinct roles: Widget Designers, Look and Feel Designers, and Application Designers. MWT allows a binary HMI application to run the same on all devices that provide a compliant MWT framework (embedded devices, cellphones, set-top box TV's, PC's, etc...) allowing for true consistency and ubiquity of applications across product lines (ME, SE, EE).
|-
| [http://www.e-s-r.net/specifications/ 015]||ECLASSPATH||ECLASSPATH unifies CLDC, CDC, Foundation, SE, and EE execution environments with a set of around 300 classes API. Compiling against CLDC1.1/ECLASSPATH makes binary code portable across all Java execution environments.
|}

== See also ==
{{Portal|Computer programming}}
* [[Android (operating system)]]
* [[iOS]]
* [[BlackBerry OS]]
* [[Danger Hiptop]]
* [[Embedded Java]]
* [[JavaFX Mobile]]
* [[Mobile development]]
* [[Mobile games]]
* [[Mobile learning]]
* [[Qualcomm Brew]]
* [[Smartphone]]

== References ==
{{Reflist|30em}}
;Notes
* [http://www.jcp.org/en/jsr/detail?id=232 JSR 232: Mobile Operational Management]{{snd}} an advanced OSGi technology based platform for mobile computing
* [http://www.jcp.org/en/jsr/detail?id=291 JSR 291: Dynamic Component Support for Java SE]{{snd}} symmetric programming model for Java SE to Java&amp;nbsp;ME JSR&amp;nbsp;232

== Bibliography ==
{{Refbegin}}
* {{cite book
| first1 = Roy
| last1 = Ben Hayun
| date = March 30, 2009
| title = Java ME on Symbian OS: Inside the Smartphone Model
| publisher = [[John Wiley &amp; Sons|Wiley]]
| edition = 1st
| page = 482
| isbn = 0-470-74318-2
| url = http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0470743182.html
}}
* {{cite book
| first = Jonathan
| last = Knudsen
| date = January 8, 2008
| title = Kicking Butt with MIDP and MSA: Creating Great Mobile Applications
| publisher = [[Prentice Hall]]
| edition = 1st
| page = [https://archive.org/details/kickingbuttwithm0000knud/page/432 432]
| isbn = 0-321-46342-0
| url = https://archive.org/details/kickingbuttwithm0000knud/page/432
| url-access = registration
}}
* {{cite book
| first1 = Sing
| last1 = Li
| first2 = Jonathan
| last2 = Knudsen
| date = April 25, 2005
| title = Beginning J2ME: From Novice to Professional
| publisher = [[Apress]]
| edition = 3rd
| page = [https://archive.org/details/beginningj2mefro0000lisi/page/480 480]
| isbn = 1-59059-479-7
| url = https://archive.org/details/beginningj2mefro0000lisi/page/480
}}
{{Refend}}

== External links ==
{{Wikibooks|J2ME Programming}}
* [http://java.sun.com/javame/index.jsp Sun Developer Network, Java ME]
* [https://web.archive.org/web/20080905191743/http://www.forum.nokia.com/java Nokia's Developer Hub Java pages]
* [https://web.archive.org/web/20080907084829/http://www.blogs.s60.com/java/ Nokia S60 Java Runtime blogs]
* [https://web.archive.org/web/20090106053708/http://developer.sonyericsson.com/ Sony Ericsson Developer World]
* [http://developer.motorola.com/ Motorola Developer Network]
* [http://hotlavasoftware.com/ J2ME Authoring Tool LMA Users Network]
* [https://web.archive.org/web/20080810234623/http://developers.samsungmobile.com/ Samsung Mobile Developer's site]
* [https://web.archive.org/web/20180821221736/http://developer.sprint.com/ Sprint Application Developer's Website]
* [https://web.archive.org/web/20080521160132/http://jbenchmark.com/ Performance database of Java ME compatible devices]
* [http://www.microej.com/ MicroEJ platforms for embedded systems]
* [https://www.skjapp.com/javame-j2me Book - Mobile Phone Programming using Java ME (J2ME)]
* [https://web.archive.org/web/20160304053207/http://javafxtuts.com/javafx-tutorials/ Tutorial Master ng, J2ME]

{{Java (Sun)}}
{{Mobile operating systems}}

[[Category:Computing platforms]]
[[Category:Java device platform| ]]
[[Category:Java platform|Platform, Micro Edition]]
[[Category:Java specification requests|Platform, Micro Edition]]</text>
      <sha1>odp665rjsqyxtb5c7t2aw4nleex4l41</sha1>
    </revision>
  </page>
  <page>
    <title>Java Platform, Standard Edition</title>
    <ns>0</ns>
    <id>42871</id>
    <revision>
      <id>989032727</id>
      <parentid>988961450</parentid>
      <timestamp>2020-11-16T17:52:23Z</timestamp>
      <contributor>
        <username>Peterl</username>
        <id>266404</id>
      </contributor>
      <comment>/* Security */ Every 3 months</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="35389" xml:space="preserve">{{short description|Computing software platform}}
{{more citations needed|date=April 2018}}
{{Java platforms}}
'''Java Platform, Standard Edition''' ('''Java SE''') is a [[computing platform]] for development and deployment of [[porting|portable code]] for [[desktop computer|desktop]] and [[server (computing)|server]] environments.&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javase/overview/index.html|title=Java SE Overview|accessdate=February 26, 2017|publisher=[[Oracle Corporation]]}}&lt;/ref&gt; Java SE was formerly known as '''Java 2 Platform, Standard Edition''' ('''J2SE''').

The platform uses [[Java (programming language)|Java]] programming language and is part of the [[Java (software platform)|Java software-platform]] family. Java SE defines a range of general-purpose [[API]]s—such as [[List of Java APIs|Java APIs]] for the [[Java Class Library]]—and also includes the [[Java Language Specification]] and the [[Java Virtual Machine Specification]].&lt;ref&gt;{{cite web|url= https://www.jcp.org/en/jsr/detail?id=270|title= Java SE 6 Release Contents|accessdate= January 1, 2013|publisher= [[Oracle Corporation]] and/or its affiliates}}&lt;/ref&gt; [[OpenJDK]] is the official [[reference implementation]] since version 7.&lt;ref&gt;[https://blogs.oracle.com/java/moving-to-openjdk-as-the-official-java-se-7-reference-implementation Moving to OpenJDK as the official Java SE 7 Reference Implementation]&lt;/ref&gt;&lt;ref&gt;[http://jdk.java.net/java-se-ri/7 Java Platform, Standard Edition 7 Reference Implementations]&lt;/ref&gt;&lt;ref&gt;{{cite web |title=Java Platform, Standard Edition 8 Reference Implementations |url=http://jdk.java.net/java-se-ri/8 |archiveurl=https://web.archive.org/web/20151121054204/https://jdk8.java.net/java-se-8-ri/ |archive-date=November 21, 2015}}&lt;/ref&gt;

{{TOC limit|3}}

== Nomenclature, standards and specifications ==
The platform was known as ''Java 2 Platform, Standard Edition'' or ''J2SE'' from version 1.2, until the name was changed to ''Java Platform, Standard Edition'' or ''Java SE'' in version 1.5. The &quot;SE&quot; is used to distinguish the base platform from the Enterprise Edition ([[Java EE]]) and Micro Edition ([[Java ME]]) platforms. The &quot;2&quot; was originally intended to emphasize the major changes introduced in version 1.2, but was removed in version 1.6. The naming convention has been changed several times over the [[Java version history]]. Starting with J2SE 1.4 (Merlin), Java SE has been developed under the [[Java Community Process]], which produces descriptions of proposed and final specifications for the Java platform called [[Java Specification Request|Java Specification Requests (JSR)]].&lt;ref&gt;{{cite web|url=https://jcp.org/en/jsr/overview|title=Java Specification Requests Overview|accessdate=January 1, 2013|publisher=[[Oracle Corporation]] and/or its affiliates}}&lt;/ref&gt; JSR 59 was the umbrella specification for J2SE 1.4 and JSR 176 specified J2SE 5.0 (Tiger). Java SE 6 (Mustang) was released under JSR 270.

[[Java Platform, Enterprise Edition]] (Java EE) is a related specification that includes all the [[class (computer science)|classes]] in Java SE, plus a number that are more useful to programs that run on [[Server (computing)|server]]s as opposed to [[workstation]]s.

[[Java Platform, Micro Edition]] (Java ME) is a related specification intended to provide a certified collection of Java APIs for the development of software for small, resource-constrained devices such as [[cell phone]]s, [[portable digital assistant|PDA]]s and [[set-top box]]es.

The [[Java virtual machine#Java Runtime Environment|Java Runtime Environment (JRE)]] and [[Java Development Kit|Java Development Kit (JDK)]] are the actual files downloaded and installed on a computer to run or develop Java programs, respectively.

== General purpose packages ==

=== java.lang ===
The [[Java package]] {{Javadoc:SE|package=java.lang|java/lang|This shared link has expired.=This shared link has expired.}} contains fundamental classes and [[interface (Java)|interfaces]] closely tied to the language and [[Run time system|runtime]] system. This includes the root classes that form the [[class hierarchy]], types tied to the language definition, basic [[exception handling|exceptions]], math functions, [[thread (computer science)|threading]], security functions, as well as some information on the underlying native system. This package contains 22 of 32 &lt;code&gt;Error&lt;/code&gt; classes provided in JDK 6.

The main classes and interfaces in &lt;code&gt;java.lang&lt;/code&gt; are:

* {{Javadoc:SE|java/lang|Object}} – the class that is the root of every class hierarchy.
* {{Javadoc:SE|java/lang|Enum}} – the base class for [[enumerated type|enumeration classes]] (as of J2SE 5.0).
* {{Javadoc:SE|java/lang|Class}} – the class that is the root of the Java [[Reflection (computer science)|reflection]] system.
* {{Javadoc:SE|java/lang|Throwable}} – the class that is the base class of the exception class hierarchy.
* {{Javadoc:SE|java/lang|Error}}, {{Javadoc:SE|java/lang|Exception}}, and {{Javadoc:SE|java/lang|RuntimeException}} – the base classes for each exception type.
* {{Javadoc:SE|java/lang|Thread}} – the class that allows operations on threads.
* {{Javadoc:SE|java/lang|String}} – the class for [[string (computer science)|strings]] and [[string literal]]s.
* {{Javadoc:SE|java/lang|StringBuffer}} and {{Javadoc:SE|java/lang|StringBuilder}} – classes for performing [[StringBuffer and StringBuilder|string manipulation]] (&lt;code&gt;StringBuilder&lt;/code&gt; as of J2SE 5.0).
* {{Javadoc:SE|java/lang|Comparable}} – the interface that allows generic comparison and ordering of objects (as of J2SE 1.2).
* {{Javadoc:SE|java/lang|Iterable}} – the interface that allows generic iteration using the [[Foreach#Java|enhanced &lt;code&gt;for&lt;/code&gt; loop]] (as of J2SE 5.0).
* {{Javadoc:SE|java/lang|ClassLoader}}, {{Javadoc:SE|java/lang|Process}}, {{Javadoc:SE|java/lang|Runtime}}, {{Javadoc:SE|java/lang|SecurityManager}}, and {{Javadoc:SE|java/lang|System}} – classes that provide &quot;system operations&quot; that manage the [[dynamically loaded library|dynamic loading]] of classes, creation of external [[process (computing)|processes]], host environment inquiries such as the time of day, and enforcement of [[security policy|security policies]].
* {{Javadoc:SE|java/lang|Math}} and {{Javadoc:SE|java/lang|StrictMath}} – classes that provide basic math functions such as [[sine]], [[cosine]], and [[square root]] (&lt;code&gt;StrictMath&lt;/code&gt; as of J2SE 1.3).
* The [[primitive wrapper class]]es that [[encapsulation (computer science)|encapsulate]] [[primitive type]]s as [[object (computer science)|objects]].
* The basic exception classes thrown for language-level and other common exceptions.
