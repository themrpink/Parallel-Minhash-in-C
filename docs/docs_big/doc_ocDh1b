The concept of '''network provisioning''' or '''service mediation''', mostly used in the [[telecommunication industry]], refers to the provisioning of the customer's services to the network elements, which are various equipment connected in that network communication system. Generally in telephony provisioning this is accomplished with network management database table mappings. It requires the existence of networking equipment and depends on [[network planning and design]].

In a modern signal infrastructure employing [[information technology]] (IT) at all levels, there is no possible distinction between telecommunications services and &quot;higher level&quot; infrastructure.{{citation needed|date=October 2014}}  Accordingly, provisioning configures any required systems, provides users with access to data and technology resources, and refers to all enterprise-level information-resource management involved.

Organizationally, a [[Chief Information Officer|CIO]] typically manages provisioning, necessarily involving [[human resources]] and IT departments cooperating to:

* Give users access to data repositories or grant authorization to systems, network applications and databases based on a unique user identity.
* Appropriate for their use hardware resources, such as computers, mobile phones and pagers.

As its core, the provisioning process monitors access rights and privileges to ensure the security of an enterprise's resources and user privacy.  As a secondary responsibility, it ensures compliance and minimizes the vulnerability of systems to penetration and abuse.  As a tertiary responsibility, it tries to reduce the amount of custom configuration using [[boot image control]] and other methods that radically reduce the number of different configurations involved.

Discussion of provisioning often appears in the context of [[Platform virtualization|virtualization]], [[orchestration (computers)|orchestration]], [[utility computing]], [[cloud computing]], and open-configuration concepts and projects.  For instance, the [[OASIS (organization)|OASIS]] Provisioning Services Technical Committee (PSTC) defines an [[XML]]-based framework for exchanging user, resource, and service-provisioning information - [[SPML]] (Service Provisioning Markup Language) for &quot;managing the provisioning and allocation of identity information and system resources within and between organizations&quot;.{{citation needed|date=October 2014}}

Once provisioning has taken place, the process of [[SysOp]]ping ensures the maintenance of services to the expected standards.  Provisioning thus refers only to the setup or startup part of the service operation, and SysOpping to the ongoing support.

==Network provisioning==
One type of provisioning.
The services which are assigned to the customer in the [[customer relationship management]] (CRM) have to be provisioned on the [[network element]] which is enabling the service and allows the customer to actually use the service. The relation between a service configured in the CRM and a service on the network elements is not necessarily a one-to-one relationship; for example, services like [[Microsoft Media Server]] (mms://) can be enabled by more than one network element.

During the provisioning, the service mediation device translates the service and the corresponding parameters of the service to one or more services/parameters on the network elements involved. The algorithm used to translate a system service into network services is called '''provisioning logic'''.

Electronic invoice feeds from your carriers can be automatically downloaded directly into the core of the [[telecom expense management]] (TEM) software and it will immediately conduct an audit of each single line item charge all the way down to the User Support and Operations Center (USOC) level. The provisioning software will capture each circuit number provided by all of your carriers and if billing occurs outside of the contracted rate an exception rule will trigger a red flag and notify the pre-established staff member to review the billing error.

==Server provisioning==
Server provisioning is a set of actions to prepare a server with appropriate systems, data and software, and make it ready for network operation. Typical tasks when provisioning a server are: select a [[server (computing)|server]] from a pool of available servers, load the appropriate [[software]] ([[operating system]], [[device driver]]s, [[middleware]], and [[application software|application]]s), appropriately customize and configure the system and the software to create or change a [[boot image]] for this server, and then change its parameters, such as [[IP address]], [[Gateway (telecommunications)|IP Gateway]] to find associated network and storage resources (sometimes separated as ''resource provisioning'') to audit the system. By auditing the system, you ensure [[Open Vulnerability and Assessment Language|OVAL]] compliance with limit vulnerability, ensure compliance, or install patches. After these actions, you restart the system and load the new software. This makes the system ready for operation. Typically an [[internet service provider]] (ISP) or [[Network Operations Center]] will perform these tasks to a well-defined set of parameters, for example, a boot image that the organization has approved and which uses software it has license to. Many instances of such a boot image create a [[virtual host|virtual]] [[Dedicated hosting service|dedicated host]].

There are many [[software]] products available to automate the provisioning of servers, services and end-user devices. Examples: BMC Bladelogic Server Automation, HP Server Automation, [[IBM Tivoli]] Provisioning Manager, [[Redhat]] Kickstart, xCAT, HP Insight CMU, etc.  Middleware and applications can be installed either when the operating system is installed or afterwards by using an [[Application Service Automation]] tool. Further questions are addressed in academia such as when provisioning should be issued and how many servers are needed in multi-tier,&lt;ref&gt;{{Cite journal | doi=10.1145/1342171.1342172|title = Agile dynamic provisioning of multi-tier Internet applications| journal=ACM Transactions on Autonomous and Adaptive Systems| volume=3| pages=1–39|year = 2008|last1 = Urgaonkar|first1 = Bhuvan| last2=Shenoy| first2=Prashant| last3=Chandra| first3=Abhishek| last4=Goyal| first4=Pawan| last5=Wood| first5=Timothy| citeseerx=10.1.1.294.6606|s2cid = 10041862}}&lt;/ref&gt; or multi-service applications.&lt;ref&gt;Jiang Dejun, Guillaume Pierre and Chi-Hung Chi. [http://www.globule.org/publi/ARPMSWA_www2010.html Autonomous Resource Provisioning for Multi-Service Web Applications]. In Proceedings of the 19th International World-Wide Web conference, April 2010.&lt;/ref&gt;

In [[cloud computing]], servers may be provisioned via a web user interface or an [[application programming interface]] (API). One of the unique things about cloud computing is how rapidly and easily this can be done.  Monitoring software can be used to trigger automatic provisioning when existing resources become too heavily stressed.&lt;ref&gt;Amies A, Sanchez J, Vernier D, and Zheng X D, 2011. [http://www.ibm.com/developerworks/cloud/library/cl-monitorcloudservices/ &quot;Monitor services in the cloud&quot;], ''IBM developerWorks'', February 15.&lt;/ref&gt;

In short, server provisioning configures servers based on resource requirements. The use of a hardware or software component (e.g. single/dual processor, RAM, HDD, [[RAID Controller]], a number of [[LAN card]]s, applications, OS, etc.) depends on the functionality of the server, such as ISP, virtualization, NOS, or voice processing. Server redundancy depends on the availability of servers in the organization. Critical applications have less downtime when using cluster servers, RAID, or a mirroring system.

Service used by most larger-scale centers in part to avoid this. Additional '''resource provisioning''' may be done per service.&lt;ref&gt;{{cite book|last=He|first=Sijin |author2=L. Guo |author3=Y. Guo |author4=M. Ghanem |chapter=Improving Resource Utilisation in the Cloud Environment Using Multivariate Probabilistic Models|publisher=2012 2012 IEEE 5th International Conference on Cloud Computing (CLOUD) |doi=10.1109/CLOUD.2012.66 |isbn=978-1-4673-2892-0 |pages=574–581|title=2012 IEEE Fifth International Conference on Cloud Computing |year=2012 |s2cid=15374752 }}&lt;/ref&gt;

There are several software on the market for server provisioning such as [[Cobbler_(software)|Cobbler]] or HP Intelligent Provisioning.

==User provisioning==
{{further|User provisioning software}}
User provisioning refers to the creation, maintenance and deactivation of user objects and user attributes, as they exist in one or more systems, directories or applications, in response to automated or interactive business processes.  User provisioning software may include one or more of the following processes: change propagation, self-service [[workflow]], consolidated user administration, delegated user administration, and federated change control.  User objects may represent employees, contractors, vendors, partners, customers or other recipients of a service.  Services may include [[electronic mail]], inclusion in a published [[directory service|user directory]], access to a [[database]], access to a network or mainframe, etc.  User provisioning is a type of [[identity management]] software, particularly useful within organizations, where users may be represented by multiple objects on multiple systems and multiple instances.

==Self-service provisioning for cloud computing services==
On-demand self-service is described by the [[National Institute of Standards and Technology]] (NIST) as an essential characteristic of [[cloud computing]].&lt;ref&gt;Mell, Peter; Grance, Timothy. [http://csrc.nist.gov/publications/nistpubs/800-145/SP800-145.pdf &quot;The NIST definition of cloud computing&quot;], Special Publication 800-145, National Institute of Standards and Technology&lt;/ref&gt; The self-service nature of cloud computing lets end users obtain and remove cloud services―including applications, the infrastructure supporting the applications,&lt;ref&gt;{{cite book|last=He|first=Sijin|author2=L. Guo |author3=Y. Guo |author4=C. Wu |author5=M. Ghanem |author6=R. Han |chapter=Elastic Application Container: A Lightweight Approach for Cloud Resource Provisioning|publisher=2012 IEEE 26th International Conference on Advanced Information Networking and Applications (AINA) |doi=10.1109/AINA.2012.74|isbn=978-1-4673-0714-7|pages=15–22|title=2012 IEEE 26th International Conference on Advanced Information Networking and Applications|year=2012|s2cid=4863927}}&lt;/ref&gt; and configuration―&lt;ref&gt;Perera, David. [http://www.fiercegovernmentit.com/story/real-obstacle-federal-cloud-computing/2012-07-12 &quot;The real obstacle to federal cloud computing&quot;], ''Fierce Government IT'', July 12, 2012&lt;/ref&gt; themselves without requiring the assistance of an IT staff member.&lt;ref&gt;MSV, Janakiram. [http://cloudstory.in/2012/07/top-10-reasons-why-startups-should-consider-cloud/ &quot;Top 10 reasons why startups should consider cloud&quot;]. ''Cloud Story'', July 20, 2012&lt;/ref&gt; The automatic self-servicing may target different application goals and constraints (e.g. deadlines and cost),&lt;ref name=&quot;sc2011workflow&quot;&gt;{{cite book|last=Mao|first=Ming|author2=M. Humphrey |title=Auto-scaling to minimize cost and meet application deadlines in cloud workflows|journal=Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis (SC2011)|year=2011|doi=10.1145/2063384.2063449|isbn=978-1-4503-0771-0|s2cid=11960822}}&lt;/ref&gt;&lt;ref name=&quot;sc2013scaling&quot;&gt;{{cite book|last=Mao|first=Ming|author2=M. Humphrey |title=Scaling and Scheduling to Maximize Application Performance within Budget Constraints in Cloud Workflows|journal=Proceedings of the 2013 IEEE 27th International Symposium on Parallel and Distributed Processing(IPDPS2013)|year=2013|url=http://dl.acm.org/citation.cfm?id=2511429|doi=10.1109/IPDPS.2013.61|isbn=978-0-7695-4971-2|pages=67–78|s2cid=5226147}}&lt;/ref&gt; as well as handling different application architectures (e.g., bags-of-tasks and workflows).&lt;ref name=&quot;grid2010&quot;&gt;{{cite book|last=Mao|first=Ming |author2=J. Li |author3=M. Humphrey|title=2010 11th IEEE/ACM International Conference on Grid Computing (Grid2010)|year=2010|doi=10.1109/GRID.2010.5697966|isbn=978-1-4244-9347-0|pages=41–48|citeseerx=10.1.1.467.5771 |s2cid=9744596 }}&lt;/ref&gt; Cloud users can obtain cloud services through a cloud service catalog or a self-service portal.&lt;ref&gt;Onisick, Joe. [http://www.networkcomputing.com/private-cloud-tech-center/240004192 &quot;Five steps to building a private cloud&quot;], ''Network Computing'', July 23, 2012&lt;/ref&gt; Because business users can obtain and configure cloud services themselves, this means IT staff can be more productive and gives them more time to manage cloud infrastructures.&lt;ref&gt;Cowie, Jason. [http://www.datacenterjournal.com/dcj-magazine/how-to-make-private-cloud-initiatives-matter-to-your-ceo/ &quot;How to make private cloud initiatives matter to your CEO&quot;], ''The Data Center Journal'', July 17, 2012&lt;/ref&gt;

One downside of cloud service provisioning is that it is not instantaneous. A cloud [[virtual machine]] (VM) can be acquired at any time by the user, but it may take up to several minutes for the acquired VM to be ready to use. The VM startup time is dependent on factors, such as image size, VM type, [[data center]] location, and number of VMs.&lt;ref name=&quot;vmstartuptime2012&quot;&gt;{{cite book|last=Mao|first=Ming|author2=M. Humphrey |title=A Performance Study on the VM Startup Time in the Cloud|journal=Proceedings of 2012 IEEE 5th International Conference on Cloud Computing (Cloud2012)|year=2012|doi=10.1109/CLOUD.2012.103|isbn=978-1-4673-2892-0|page=423|s2cid=1285357}}&lt;/ref&gt; Cloud providers have different VM startup performance.

==Mobile subscriber provisioning==
Mobile subscriber provisioning refers to the setting up of new services, such as [[General Packet Radio Service|GPRS]], [[Multimedia Messaging Service|MMS]] and [[Instant Messaging]] for an existing subscriber of a [[mobile phone]] network, and any gateways to standard Internet [[Online chat|chat]] or [[mail]] services.  The network operator typically sends these settings to the subscriber's handset using [[Short message service|SMS]] text services or [[HTML]], and less commonly [[Wireless Application Protocol|WAP]], depending on what the [[mobile operating system]]s can accept.

A general example of provisioning is with data services. A mobile user who is using his or her device for voice calling may wish to switch to data services in order to read emails or browse the Internet. The mobile device's services are &quot;provisioned&quot; and thus the user is able to stay connected through push emails and other features of smartphone services.

Device management systems can benefit end-users by incorporating [[Plug and play|plug-and-play]] data services, supporting whatever device the end-user is using.{{citation needed|date=April 2014}}. Such a platform can automatically detect devices in the network, sending them settings for immediate and continued usability.{{citation needed|date=April 2014}} The process is fully automated, keeping the history of used devices and sending settings only to subscriber devices which were not previously set.  One method of managing mobile updates is to filter [[IMEI]]/[[International mobile subscriber identity|IMSI]] pairs.{{citation needed|date=April 2014}}  Some operators report activity of 50 over-the-air settings update files per second.{{citation needed|date=April 2014}}

==Mobile content provisioning==
This refers to delivering [[mobile content]], such as mobile internet to a [[mobile phone]], agnostic of the features of said device. These may include operating system type and versions, Java version, browser version, screen form factors, audio capabilities, language settings and many other characteristics. As of April 2006, an estimated 5,000 permutations were relevant. Mobile content provisioning facilitates a common user experience, though delivered on widely different handsets.

==Mobile device provisioning==
Provisioning devices involves delivering configuration data and policy settings to the mobile devices from a central point – [[Mobile device management]] system tools.

==Internet access provisioning==
When getting a customer online, the client system must be configured. Depending on the connection technology (e.g., [[DSL]], Cable, Fibre), the client system configuration may include:
* [[Modem]] configuration
* Network authentication
* Installing [[Device driver|drivers]]
* Setting up [[Wireless LAN]]
* Securing [[operating system]] (primarily for [[Microsoft Windows|Windows]])
* Configuring browser provider-specifics
* E-mail provisioning (create mailboxes and aliases)
* E-mail configuration in client systems
* Installing additional support software or add-on packages

There are four approaches to provisioning internet access:

* Hand out manuals: Manuals are a great help for experienced users, but inexperienced users will need to call the support hotline several times until all internet services are accessible. Every unintended change in the configuration, by user mistake or due to a software error, results in additional calls.
* On-site setup by a technician: Sending a technician on-site is the most reliable approach from the provider’s point of view, as the person ensures that the internet access is working, before leaving the customer’s premises. This advantage comes at high costs – either for the provider or the customer, depending on the business model. Furthermore, it is inconvenient for customers, as they have to wait until they get an installation appointment and because they need to take a day off from work. For repairing an internet connection on-site or phone support will be needed again.
* Server-side remote setup: Server-side modem configuration uses a protocol called [[TR-069]]. It is widely established and reliable. At the current stage it can only be used for modem configuration. Protocol extensions are discussed, but not yet practically implemented, particularly because most client devices and applications do not support them yet. All other steps of the provisioning process are left to the user, typically causing many rather long calls to the support hotline.
* Installation CD: Also called a &quot;client-side self-service installation&quot; [[Compact disc|CD]], it can cover the entire process from modem configuration to setting up client applications, including home networking devices. The software typically acts autonomously, i.e., it doesn’t need an online connection and an expensive backend infrastructure. During such an installation process the software usually also install diagnosis and self-repair applications that support customers in case of problems, avoiding costly hotline calls. Such client-side applications also open completely new possibilities for marketing, [[Cross-selling|cross-]] and [[upselling]]. Such solutions come from highly specialised companies or directly from the provider’s development department.

==See also==
* [[Dynamic provisioning environment]]

==References==
{{Reflist|30em}}

==External links==
* {{dmoz|/Computers/Internet/Access_Providers/Resources_for_ISPs/Customer_Provisioning/|Customer provisioning}}

[[Category:Network access]]
[[Category:Operating system technology]]
[[Category:Provisioning| ]]</text>
      <sha1>h1q9t76aegzgc7vie60fyijlf3fr2dg</sha1>
    </revision>
  </page>
  <page>
    <title>Pseudorandom noise</title>
    <ns>0</ns>
    <id>41593</id>
    <revision>
      <id>921235348</id>
      <parentid>921229220</parentid>
      <timestamp>2019-10-14T17:57:19Z</timestamp>
      <contributor>
        <username>Dicklyon</username>
        <id>869314</id>
      </contributor>
      <minor />
      <comment>Reverted 1 edit by [[Special:Contributions/117.203.53.154|117.203.53.154]] ([[User talk:117.203.53.154|talk]]): Junk ([[WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4539" xml:space="preserve">{{Use American English|date = March 2019}}
{{Short description|Pseudo-random signal with characteristics similar to noise}}
{{Use mdy dates|date = March 2019}}

In [[cryptography]], '''pseudorandom noise''' ('''PRN''' &lt;ref&gt;{{cite web |url=http://www.gps.gov/technical/icwg/meetings/2011/09/13/WAS-IS-FINAL_PRN_Expansion_4May2011.pdf |title=Change Topic: Pseudorandom Noise (PRN) Expansion |publisher=GPS.GOV |accessdate=13 July 2011 }}&lt;/ref&gt;) is a [[Signalling (telecommunication)|signal]] similar to [[noise (physics)|noise]] which satisfies one or more of the standard tests for [[statistical randomness]]. Although it seems to lack any definite [[pattern]], pseudorandom noise consists of a deterministic [[sequence]] of [[Pulse (signal processing)|pulses]] that will repeat itself after its period.&lt;ref&gt;{{FS1037C MS188}}&lt;/ref&gt; 

In [[cryptography|cryptographic device]]s, the pseudorandom noise pattern is determined by a [[key (cryptography)|key]] and the repetition period can be very long, even millions of digits.

Pseudorandom noise is used in some [[synthesizer|electronic musical instruments]], either by itself or as an input to [[subtractive synthesis]], and in many [[white noise machine]]s.

In [[spread-spectrum]] systems, the receiver [[correlation|correlates]] a locally generated signal with the received [[signal (information theory)|signal]]. Such spread-spectrum systems require a set of one or more &quot;codes&quot; or &quot;sequences&quot; such that
* Like random noise, the local sequence has a very low correlation with any other sequence in the set, or with the same sequence at a significantly different time offset, or with narrow band interference, or with thermal noise.
* Unlike random noise, it must be easy to generate exactly the same sequence at both the transmitter and the receiver, so the receiver's locally generated sequence has a very high correlation with the transmitted sequence.

In a [[direct-sequence spread spectrum]] system, each bit in the [[pseudorandom binary sequence]] is known as a ''[[Chip (CDMA)|chip]]'' and the ''inverse'' of its period as ''[[chip rate]]''; ''compare [[bit rate]] and [[symbol rate]].''

In a [[frequency-hopping spread spectrum]] sequence, each value in the pseudorandom sequence is known as a ''channel number'' and the ''inverse'' of its period as the ''hop rate''. [[FCC Part 15]] mandates at least 50 different channels and at least a 2.5&amp;nbsp;Hz hop rate for narrow band frequency-hopping systems.

GPS satellites broadcast data at a rate of 50 data bits per second &amp;ndash; each satellite modulates its data with one PN bit stream at 1.023 million [[chips per second]] and the same data with another PN bit stream at 10.23 million chips per second.
[[GPS]] receivers correlate the received PN bit stream with a local reference to measure distance. GPS is a receive-only system that uses relative timing measurements from several satellites (and the known positions of the satellites) to determine receiver position.

Other [[range-finding]] applications involve two-way transmissions. A local station generates a pseudorandom bit sequence and transmits it to the remote location (using any modulation technique). Some object at the remote location echoes this PN signal back to the location station &amp;ndash; either passively, as in some kinds of radar and sonar systems, or using an active transponder at the remote location, as in the Apollo [[Unified S-band]] system.&lt;ref&gt;[http://www.ab9il.net/aviation/apollo-s-band.html &quot;The Apollo Unified S Band System&quot;]
&lt;/ref&gt; By correlating a (delayed version of) the transmitted signal with the received signal, a precise round trip time to the remote location can be determined and thus the distance.

==PN code==
{{main|Pseudorandom binary sequence}}
A '''pseudo-noise code''' ('''PN code''') or '''pseudo-random-noise code''' ('''PRN code''') is one that has a spectrum similar to a [[algorithmically random sequence|random sequence]] of bits but is [[Deterministic computation|deterministically]] generated. The most commonly used sequences in [[direct-sequence spread spectrum]] systems are [[maximal length sequence]]s, [[Gold code]]s, [[Kasami code]]s, and [[Barker code]]s.&lt;ref&gt;[http://www-mobile.ecs.soton.ac.uk/bjc97r/pnseq.old/node1.html]&lt;/ref&gt;

==See also==
* [[Gold code|Gold Codes]]
* [[Maximum length sequence]]
* [[Zadoff–Chu sequence]]
* [[Pseudorandom number generator]]
* [[Pseudorandomness]]
* [[White noise]]

==References==
{{Reflist}}

{{Cdma}}

[[Category:Noise (electronics)]]
[[Category:Pseudorandomness]]</text>
      <sha1>ja5en7jsfjcp4z4h5cs2e1zlh9d7i0j</sha1>
    </revision>
  </page>
  <page>
    <title>Pseudorandom number sequence</title>
    <ns>0</ns>
    <id>41594</id>
    <redirect title="Pseudorandom number generator" />
    <revision>
      <id>298184764</id>
      <parentid>298184012</parentid>
      <timestamp>2009-06-23T19:31:44Z</timestamp>
      <contributor>
        <username>Oli Filth</username>
        <id>547762</id>
      </contributor>
      <comment>better redirect to [[Pseudorandom number generator]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="43" xml:space="preserve">#REDIRECT [[Pseudorandom number generator]]</text>
      <sha1>abo2kckotj3zp4t60m2tgx0tp25jz0u</sha1>
    </revision>
  </page>
  <page>
    <title>Psophometer</title>
    <ns>0</ns>
    <id>41595</id>
    <revision>
      <id>914745446</id>
      <parentid>914745312</parentid>
      <timestamp>2019-09-09T04:20:00Z</timestamp>
      <contributor>
        <username>Headbomb</username>
        <id>1461430</id>
      </contributor>
      <comment>Alter: journal. | You can [[WP:UCB|use this tool]] yourself. [[WP:DBUG|Report bugs here]]. ce</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2653" xml:space="preserve">[[File:Psophometer IMG 1665.JPG|thumb|Psophometer]]
In [[telecommunication]]s, a '''psophometer''' is an instrument that measures the perceptible [[noise (signal processing)|noise]] of a telephone circuit.&lt;ref name=&quot;Hickman, EW, 2001&quot; /&gt;

The core of the meter is based on a [[true RMS voltmeter]], which measures the level of the noise signal. This was used for the first psophometers, in the 1930s.&lt;ref name=&quot;IEEE, Psophometer&quot; /&gt; As the human-perceived level of noise is more important for telephony than their raw voltage, a modern psophometer incorporates a weighting network to represent this perception.&lt;ref name=&quot;Hickman, EW, 2001&quot; /&gt;&lt;ref name=&quot;IEEE, Psophometer&quot; /&gt;&lt;ref name=&quot;CCITT, P53&quot; /&gt; The characteristics of the weighting network depend on the type of [[telecommunication circuit|circuit]] under investigation, such as whether the circuit is used to normal speech standards (300&amp;nbsp;Hz&amp;nbsp;–&amp;nbsp;3.3&amp;nbsp;kHz), or for [[high-fidelity]] [[broadcast-quality]] sound (50&amp;nbsp;Hz&amp;nbsp;–&amp;nbsp;15&amp;nbsp;kHz).&lt;ref name=&quot;Hickman, EW, 2001&quot; /&gt;

== Etymology ==
The name was coined in the 1930s, on a basis from {{lang-grc|ψόφος|psóphos|noise}}, itself derived from {{lang-grc|ψό||an exclamation of disgust}}.&lt;ref name=&quot;OED, Psophometer&quot; /&gt; It is unrelated to {{lang-grc|σοφός|sóphos|wisdom}}.

The '-meter' suffix {{lang-grc|μέτρον|métron|tool for measuring}} was already widely used in English, but also derives originally from Greek.&lt;ref name=&quot;OED, Psophometer&quot; /&gt;

==See also==
*[[Psophometric voltage]]

==References==
{{Reflist|refs=

&lt;ref name=&quot;Hickman, EW, 2001&quot; &gt;{{Cite magazine
  |magazine=[[Electronics World]]
  |date=March 2001
  |author=Ian Hickman
  |title=Balanced circuits
  |pages=190–191
}}&lt;/ref&gt;
