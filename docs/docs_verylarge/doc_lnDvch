===Clock recovery===
Some data streams, especially high-speed serial data streams (such as the raw stream of data from the magnetic head of a disk drive), are sent without an accompanying clock.  The receiver generates a clock from an approximate frequency reference, and then phase-aligns to the transitions in the data stream with a PLL. This process is referred to as [[clock recovery]].  For this scheme to work, the data stream must have a transition frequently enough to correct any drift in the PLL's oscillator. Typically, some sort of [[line code]], such as [[8b/10b encoding]], is used to put a hard upper bound on the maximum time between transitions.

===Deskewing===
If a clock is sent in parallel with data, that clock can be used to sample the data.  Because the clock must be received and amplified before it can drive the flip-flops which sample the data, there will be a finite, and process-, temperature-, and voltage-dependent delay between the detected clock edge and the received data window.  This delay limits the frequency at which data can be sent.  One way of eliminating this delay is to include a deskew PLL on the receive side, so that the clock at each data flip-flop is phase-matched to the received clock. In that type of application, a special form of a PLL called a [[delay-locked loop]] (DLL) is frequently used.&lt;ref&gt;{{cite web
 |url         = http://www-vlsi.stanford.edu/papers/mh_micro_98.pdf
 |author1     = M Horowitz
 |author2     = C. Yang
 |author3     = S. Sidiropoulos
 |title       = High-speed electrical signaling: overview and limitations
 |publisher   = IEEE Micro
 |date        = 1998-01-01
 |url-status     = dead
 |archive-url  = https://web.archive.org/web/20060221015031/http://www-vlsi.stanford.edu/papers/mh_micro_98.pdf
 |archive-date = 2006-02-21
}}&lt;/ref&gt;

===Clock generation===
Many electronic systems include processors of various sorts that operate at hundreds of megahertz.  Typically, the clocks supplied to these processors come from clock generator PLLs, which multiply a lower-frequency reference clock (usually 50 or 100&amp;nbsp;MHz) up to the operating frequency of the processor.  The multiplication factor can be quite large in cases where the operating frequency is multiple gigahertz and the reference crystal is just tens or hundreds of megahertz.

===Spread spectrum===
All electronic systems emit some unwanted radio frequency energy.  Various regulatory agencies (such as the [[Federal Communications Commission|FCC]] in the United States) put limits on the emitted energy and any interference caused by it.  The emitted noise generally appears at sharp spectral peaks (usually at the operating frequency of the device, and a few harmonics).  A system designer can use a spread-spectrum PLL to reduce interference with high-Q receivers by spreading the energy over a larger portion of the spectrum.  For example, by changing the operating frequency up and down by a small amount (about 1%), a device running at hundreds of megahertz can spread its interference evenly over a few megahertz of spectrum, which drastically reduces the amount of noise seen on broadcast [[FM broadcasting|FM radio]] channels, which have a bandwidth of several tens of kilohertz.

===Clock distribution===
[[File:PLL usage.svg|center]]

Typically, the reference clock enters the chip and drives a phase locked loop ('''PLL'''), which then drives the system's clock distribution. The clock distribution is usually balanced so that the clock arrives at every endpoint simultaneously. One of those endpoints is the PLL's feedback input.  The function of the PLL is to compare the distributed clock to the incoming reference clock, and vary the phase and frequency of its output until the reference and feedback clocks are phase and frequency matched.

PLLs are ubiquitous—they tune clocks in systems several feet across, as well as clocks in small portions of individual chips. Sometimes the reference clock may not actually be a pure clock at all, but rather a data stream with enough transitions that the PLL is able to recover a regular clock from that stream. Sometimes the reference clock is the same frequency as the clock driven through the clock distribution, other times the distributed clock may be some rational multiple of the reference.

===AM detection===
A PLL may be used to synchronously demodulate amplitude modulated (AM) signals. The PLL recovers the phase and frequency of the incoming AM signal's carrier. The recovered phase at the VCO differs from the carrier's by 90°, so it is shifted in phase to match, and then fed to a multiplier. The output of the multiplier contains both the sum and the difference frequency signals, and the demodulated output is obtained by low pass filtering. Since the PLL responds only to the carrier frequencies which are very close to the VCO output, a PLL AM detector exhibits a high degree of selectivity and noise immunity which is not possible with conventional peak type AM demodulators. However, the loop may lose lock where AM signals have 100% modulation depth.&lt;ref&gt;{{citation |first=Robert |last=Dixon |title=Radio Receiver Design |publisher=CRC Press |date=1998 |isbn=0824701615 |page=215}}&lt;/ref&gt;

===Jitter and noise reduction===
One desirable property of all PLLs is that the reference and feedback clock edges be brought into very close alignment. The average difference in time between the phases of the two signals when the PLL has achieved lock is called the '''static phase offset''' (also called the '''steady-state phase error'''). The variance between these phases is called '''tracking [[jitter]]'''. Ideally, the static phase offset should be zero, and the tracking jitter should be as low as possible.{{Dubious|date=September 2010}}&lt;!-- If phase variance between input and output is 0, no jitter attenuation is possible. --&gt;

[[Phase noise]] is another type of jitter observed in PLLs, and is caused by the oscillator itself and by elements used in the oscillator's frequency control circuit.  Some technologies are known to perform better than others in this regard.  The best digital PLLs are constructed with emitter-coupled logic ([[Emitter coupled logic|ECL]]) elements, at the expense of high power consumption. To keep phase noise low in PLL circuits, it is best to avoid saturating logic families such as transistor-transistor logic ([[transistor-transistor logic|TTL]]) or [[CMOS]].&lt;ref&gt;{{Cite book|last1=Basab Bijoy Purkayastha|title=A Digital Phase Locked Loop based Signal and Symbol Recovery System for Wireless Channel|last2=Kandarpa Kumar Sarma|publisher=Springer (India) Pvt. Ltd. (Part of Springer Scinece+Business Media)|year=2015|isbn=978-81-322-2040-4|location=India|pages=5}}&lt;/ref&gt;


Another desirable property of all PLLs is that the phase and frequency of the generated clock be unaffected by rapid changes in the voltages of the power and ground supply lines, as well as the voltage of the substrate on which the PLL circuits are fabricated. This is called substrate and [[Power supply rejection ratio|supply noise rejection]]. The higher the noise rejection, the better.

To further improve the phase noise of the output, an [[injection locked oscillator]] can be employed following the VCO in the PLL.

===Frequency synthesis===
In digital wireless communication systems (GSM, CDMA etc.), PLLs are used to provide the local oscillator up-conversion during transmission and [[Digital down converter|down-conversion]] during reception. In most cellular handsets this function has been largely integrated into a single integrated circuit to reduce the cost and size of the handset. However, due to the high performance required of base station terminals, the transmission and reception circuits are built with discrete components to achieve the levels of performance required. GSM local oscillator modules are typically built with a [[frequency synthesizer]] integrated circuit and discrete resonator VCOs.{{Citation needed|date=May 2010}}

==Block diagram==
[[File:PLL generic inline optional N.svg|center|thumb|750x750px|[[Block diagram]] of a phase-locked loop]]

A phase detector compares two input signals and produces an error signal which is proportional to their phase difference. The error signal is then low-pass filtered and used to drive a VCO which creates an output phase. The output is fed through an optional divider back to the input of the system, producing a [[negative feedback loop]]. If the output phase drifts, the error signal will increase, driving the VCO phase in the opposite direction so as to reduce the error. Thus the output phase is locked to the phase at the other input. This input is called the reference.{{citation needed|date=October 2017}}

Analog phase locked loops are generally built with an analog phase detector, low pass filter and VCO placed in a [[negative feedback]] configuration. A digital phase locked loop uses a digital phase detector; it may also have a divider in the feedback path or in the reference path, or both, in order to make the PLL's output signal frequency a [[Rational number|rational]] multiple of the reference frequency.  A non-integer multiple of the reference frequency can also be created by replacing the simple divide-by-''N'' counter in the feedback path with a programmable [[pulse swallowing counter]].  This technique is usually referred to as a [[fractional-N synthesizer]] or fractional-N PLL.{{dubious|date=December 2010}}&lt;!-- doesn't fractional-N also adjust the phase at the phase detector. otherwise there's a error signal. --&gt;

The oscillator generates a periodic output signal. Assume that initially the oscillator is at nearly the same frequency as the reference signal. If the phase from the oscillator falls behind that of the reference, the phase detector changes the control voltage of the oscillator so that it speeds up.  Likewise, if the phase creeps ahead of the reference, the phase detector changes the control voltage to slow down the oscillator.  Since initially the oscillator may be far from the reference frequency, practical phase detectors may also respond to frequency differences, so as to increase the lock-in range of allowable inputs. Depending on the application, either the output of the controlled oscillator, or the control signal to the oscillator, provides the useful output of the PLL system.{{citation needed|date=October 2017}}

==Elements==

===Phase detector===
{{Main|phase detector}}

A phase detector (PD) generates a voltage, which represents the phase difference between two signals. In a PLL, the two inputs of the phase detector are the reference input and the feedback from the VCO.  The PD output voltage is used to control the VCO such that the phase difference between the two inputs is held constant, making it a negative feedback system.
&lt;ref&gt;{{Cite book|last1=Basab Bijoy Purkayastha|title=A Digital Phase Locked Loop based Signal and Symbol Recovery System for Wireless Channel|last2=Kandarpa Kumar Sarma|publisher=Springer (India) Pvt. Ltd. (Part of Springer Scinece+Business Media)|year=2015|isbn=978-81-322-2040-4|location=India|pages=94}}&lt;/ref&gt;


Different types of phase detectors have different performance characteristics.

For instance, the [[frequency mixer]] produces harmonics that adds complexity in applications where spectral purity of the VCO signal is important.  The resulting unwanted (spurious) sidebands, also called &quot;[[reference spurs]]&quot; can dominate the filter requirements and reduce the capture range well below or increase the lock time beyond the requirements.  In these applications the more complex digital phase detectors are used which do not have as severe a reference spur component on their output. Also, when in lock, the steady-state phase difference at the inputs using this type of phase detector is near 90 degrees.{{citation needed|date=August 2018}}

In PLL applications it is frequently required to know when the loop is out of lock.  The more complex digital phase-frequency detectors usually have an output that allows a reliable indication of an out of lock condition.

An [[XOR gate]] is often used for digital PLLs as an effective yet simple phase detector. It can also be used in an analog sense with only slight modification to the circuitry.

===Filter===
The block commonly called the PLL loop filter (usually a low pass filter) generally has two distinct functions.

The primary function is to determine loop dynamics, also called [[Nyquist stability criterion|stability]].  This is how the loop responds to disturbances, such as changes in the reference frequency, changes of the feedback divider, or at startup.  Common considerations are the range over which the loop can achieve lock (pull-in range, lock range or capture range), how fast the loop achieves lock (lock time, lock-up time or [[settling time]]) and [[damping]] behavior.  Depending on the application, this may require one or more of the following: a simple proportion (gain or attenuation), an [[integral]] (low pass filter) and/or [[derivative]] ([[high pass filter]]).  Loop parameters commonly examined for this are the loop's [[gain margin]] and [[phase margin]].  Common concepts in [[control theory]] including the [[PID controller]] are used to design this function.

The second common consideration is limiting the amount of reference frequency energy (ripple) appearing at the phase detector output that is then applied to the VCO control input.  This frequency modulates the VCO and produces FM sidebands commonly called &quot;reference spurs&quot;.

The design of this block can be dominated by either of these considerations, or can be a complex process juggling the interactions of the two. Typical trade-offs are increasing the bandwidth usually degrades the stability or too much damping for better stability will reduce the speed and increase settling time. Often also the phase-noise is affected.

===Oscillator===
{{Main|Electronic oscillator}}

All phase-locked loops employ an oscillator element with variable frequency capability. This can be an analog VCO either driven by analog circuitry in the case of an APLL or driven digitally through the use of a [[digital-to-analog converter]] as is the case for some DPLL designs. Pure digital oscillators such as a numerically controlled oscillator are used in ADPLLs.{{citation needed|date=October 2017}}

===Feedback path and optional divider===
[[File:Divide 4.svg|thumb|An example digital divider (by 4) for use in the feedback path of a multiplying PLL]]

PLLs may include a divider between the oscillator and the feedback input to the phase detector to produce a [[frequency synthesizer]].  A programmable divider is particularly useful in radio transmitter applications, since a large number of transmit frequencies can be produced from a single stable, accurate, but expensive, [[crystal oscillator|quartz crystal–controlled reference oscillator]].

Some PLLs also include a divider between the reference clock and the reference input to the phase detector.  If the divider in the feedback path divides by &lt;math&gt;N&lt;/math&gt; and the reference input divider divides by &lt;math&gt;M&lt;/math&gt;, it allows the PLL to multiply the reference frequency by &lt;math&gt;N/M&lt;/math&gt;.  It might seem simpler to just feed the PLL a lower frequency, but in some cases the reference frequency may be constrained by other issues, and then the reference divider is useful.

Frequency multiplication can also be attained by locking the VCO output to the ''N''th harmonic of the reference signal. Instead of a simple phase detector, the design uses a harmonic mixer (sampling mixer). The harmonic mixer turns the reference signal into an impulse train that is rich in harmonics.{{Efn|Typically, the reference sinewave drives a [[step recovery diode]] circuit to make this impulse train. The resulting impulse train drives a sample gate.}} The VCO output is coarse tuned to be close to one of those harmonics. Consequently, the desired harmonic mixer output (representing the difference between the ''N'' harmonic and the VCO output) falls within the loop filter passband.&lt;!-- HP had a harmonic mixer and synchronizer that turned its microwave sweep generators into PLLs. --&gt;

It should also be noted that the feedback is not limited to a frequency divider. This element can be other elements such as a frequency multiplier, or a mixer. The multiplier will make the VCO output a sub-multiple (rather than a multiple) of the reference frequency. A mixer can translate the VCO frequency by a fixed offset. It may also be a combination of these. An example being a divider following a mixer; this allows the divider to operate at a much lower frequency than the VCO without a loss in loop gain.

==Modeling==

===Time domain model of APLL===
The equations governing a phase-locked loop with an analog multiplier as the phase detector and linear filter may be derived as follows. Let the input to the phase detector be &lt;math&gt;f_1(\theta_1(t))&lt;/math&gt; and the output of the VCO is &lt;math&gt;f_2(\theta_2(t))&lt;/math&gt; with phases &lt;math&gt;\theta_1(t)&lt;/math&gt; and &lt;math&gt;\theta_2(t)&lt;/math&gt;. The functions &lt;math&gt;f_1(\theta) &lt;/math&gt; and &lt;math&gt;f_2(\theta)&lt;/math&gt; describe [[waveforms]] of signals. Then the output of the phase detector &lt;math&gt;\varphi(t)&lt;/math&gt; is given by

:&lt;math&gt;\varphi(t) = f_1(\theta_1(t)) f_2(\theta_2(t))&lt;/math&gt;

The VCO frequency is usually taken as a function of the VCO input
&lt;math&gt;g(t)&lt;/math&gt; as
:&lt;math&gt;\dot\theta_2(t) = \omega_2(t) =
\omega_\text{free} + g_v g(t)\,&lt;/math&gt;
where &lt;math&gt;g_v&lt;/math&gt; is the ''sensitivity'' of the VCO and is
expressed in Hz / V;
&lt;math&gt;\omega_\text{free}&lt;/math&gt; is a free-running frequency of VCO.

The loop filter can be described by a system of linear differential equations
:&lt;math&gt;
\begin{array}{rcl}
   \dot x &amp; = &amp; Ax + b \varphi(t), \\
   g(t) &amp; = &amp; c^{*}x,
\end{array}
\quad
x(0) = x_0,
&lt;/math&gt;

where &lt;math&gt;\varphi(t)&lt;/math&gt; is an input of the filter,
&lt;math&gt;g(t)&lt;/math&gt; is an output of the filter, &lt;math&gt;A&lt;/math&gt; is
&lt;math&gt;n&lt;/math&gt;-by-&lt;math&gt;n&lt;/math&gt; matrix,
&lt;math&gt;x \in \mathbb{C}^n,\quad b \in \mathbb{R}^n, \quad c \in
\mathbb{C}^n, \quad&lt;/math&gt;. &lt;math&gt;x_0 \in \mathbb{C}^n&lt;/math&gt; represents an initial state of
the filter. The star symbol is a [[conjugate transpose]].

Hence the following system describes PLL
:&lt;math&gt;\begin{array}{rcl}
 \dot x &amp;= &amp;Ax + b f_1(\theta_1(t)) f_2(\theta_2(t)),\\
 \dot \theta_2 &amp;= &amp; \omega_\text{free} + g_v (c^{*}x) \\
\end{array}
\quad
x(0) = x_0, \quad \theta_2(0) = \theta_0.
&lt;/math&gt;
where &lt;math&gt;\theta_0&lt;/math&gt; is an initial phase shift.

===Phase domain model of APLL===
Consider the input of PLL &lt;math&gt;f_1(\theta_1(t))&lt;/math&gt; and VCO output
&lt;math&gt;f_2(\theta_2(t))&lt;/math&gt; are high frequency signals.
Then for any
piecewise differentiable &lt;math&gt;2\pi&lt;/math&gt;-periodic functions
&lt;math&gt;f_1(\theta)&lt;/math&gt; and &lt;math&gt;f_2(\theta)&lt;/math&gt; there is a function
&lt;math&gt;\varphi(\theta)&lt;/math&gt; such that the output &lt;math&gt;G(t)&lt;/math&gt; of Filter
:&lt;math&gt;\begin{array}{rcl}
 \dot x &amp;= &amp;Ax + b \varphi(\theta_1(t) - \theta_2(t)), \\
 G(t) &amp;= &amp;c^{*}x,
\end{array}
\quad
x(0) = x_0,
&lt;/math&gt;
in phase domain is asymptotically equal ( the difference &lt;math&gt;G(t)- g(t)&lt;/math&gt; is small with respect to the frequencies) to the output of the Filter in time domain model. 
&lt;ref&gt;{{cite journal
 | author = G. A. Leonov, N. V. Kuznetsov, M. V. Yuldashev, R. V. Yuldashev
 | year = 2012
 | title = Analytical method for computation of phase-detector characteristic
 | journal = IEEE Transactions on Circuits and Systems II: Express Briefs
 | volume = 59
 | issue = 10
 | pages = 633–637
 |url=http://www.math.spbu.ru/user/nk/PDF/2012-IEEE-TCAS-Phase-detector-characteristic-computation-PLL.pdf
| last2 = Kuznetsov
 | last3 = Yuldashev
 | last4 = Yuldashev
 | doi = 10.1109/TCSII.2012.2213362
 | s2cid = 2405056
 }}&lt;/ref&gt;
&lt;ref&gt;{{cite journal
 | author = N.V. Kuznetsov, G.A. Leonov, M.V. Yuldashev, R.V. Yuldashev
 | year = 2011
 | title = Analytical methods for computation of phase-detector characteristics and PLL design
 | journal = ISSCS 2011 – International Symposium on Signals, Circuits and Systems, Proceedings
 | pages = 7–10
 | doi = 10.1109/ISSCS.2011.5978639| last2 = Leonov
 | last3 = Yuldashev
 | last4 = Yuldashev
 | isbn = 978-1-61284-944-7
 | s2cid = 30208667
 | url = https://zenodo.org/record/889367
 }}&lt;/ref&gt; 
Here function &lt;math&gt;\varphi(\theta)&lt;/math&gt; is a [[phase detector characteristic]].

Denote by &lt;math&gt;\theta_{\Delta}(t)&lt;/math&gt; the phase difference
:&lt;math&gt;\theta_{\Delta} = \theta_1(t) - \theta_2(t).&lt;/math&gt;
Then the following [[dynamical system]] describes PLL behavior

:&lt;math&gt;\begin{array}{rcl}
 \dot x &amp;= &amp;Ax + b \varphi(\theta_{\Delta}),\\
 \dot \theta_{\Delta} &amp;= &amp; \omega_{\Delta} - g_v (c^{*}x). \\
\end{array}
\quad
x(0) = x_0, \quad \theta_{\Delta}(0) = \theta_{1}(0) - \theta_2(0).
&lt;/math&gt;

Here &lt;math&gt;\omega_{\Delta} = \omega_1 - \omega_\text{free}&lt;/math&gt;; &lt;math&gt;\omega_1&lt;/math&gt; is the frequency of a reference oscillator (we assume that &lt;math&gt;\omega_\text{free}&lt;/math&gt; is constant).

====Example====
Consider sinusoidal signals

:&lt;math&gt;f_1(\theta_1(t)) = A_1 \sin(\theta_1(t)), \quad f_2(\theta_2(t))
= A_2\cos(\theta_2(t))&lt;/math&gt;

and a simple one-pole [[RC circuit]] as a filter. The time-domain model takes the form

:&lt;math&gt;\begin{align}
 \dot x &amp;= -\frac{1}{RC}x + \frac{1}{RC}
A_1A_2\sin(\theta_1(t)) \cos(\theta_2(t)),\\[6pt]
 \dot \theta_2 &amp;= \omega_\text{free} + g_v (c^{*}x)
\end{align}
&lt;/math&gt;
