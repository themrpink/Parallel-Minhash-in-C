Professor John D. Kubiatowicz considers traditionally SMP systems to contain processors without caches.&lt;ref&gt;{{cite conference|url=https://parlab.eecs.berkeley.edu/2013bootcampagenda|conference=2013 Short Course on Parallel Programming|author=John Kubiatowicz|title=Introduction to Parallel Architectures and Pthreads}}&lt;/ref&gt; Culler and Pal-Singh in their 1998 book &quot;Parallel Computer Architecture: A Hardware/Software Approach&quot; mention: &quot;The term SMP is widely used but causes a bit of confusion. [...] The more precise description of what is intended by SMP is a shared memory multiprocessor where the cost of accessing a memory location is the same for all processors; that is, it has uniform access costs when the access actually is to memory. If the location is cached, the access will be faster, but cache access times and memory access times are the same on all processors.&quot;&lt;ref&gt;{{cite book|isbn=978-1558603431|author1=David Culler|authorlink1=David Culler|author2=Jaswinder Pal Singh|author3=Anoop Gupta|title=Parallel Computer Architecture: A Hardware/Software Approach|url=https://books.google.com/books?id=MHfHC4Wf3K0C&amp;pg=PA32|page=47|year=1999|publisher=[[Morgan Kaufmann]]}}&lt;/ref&gt;

SMP systems are ''[[multiprocessing#Processor coupling|tightly coupled multiprocessor]] systems'' with a pool of homogeneous processors running independently of each other.  Each processor, executing different programs and working on different sets of data, has the capability of sharing common resources (memory, I/O device, interrupt system and so on) that are connected using a [[system bus]] or a [[crossbar switch|crossbar]]. 

== Design ==
SMP systems have centralized [[Shared memory architecture|shared memory]] called ''main memory'' (MM) operating under a single [[operating system]] with two or more homogeneous processors. Usually each processor has an associated private high-speed memory known as [[cache memory]] (or cache) to speed up the main memory data access and to reduce the system bus traffic.

Processors may be interconnected using buses, [[crossbar switch]]es or on-chip mesh networks. The bottleneck in the scalability of SMP using buses or crossbar switches is the bandwidth and power consumption of the interconnect among the various processors, the memory, and the disk arrays.  Mesh architectures avoid these bottlenecks, and provide nearly linear scalability to much higher processor counts at the sacrifice of programmability:

&lt;blockquote&gt;Serious programming challenges remain with this kind of architecture because it requires two distinct modes of programming; one for the CPUs themselves and one for the interconnect between the CPUs. A single programming language would have to be able to not only partition the workload, but also comprehend the memory locality, which is severe in a mesh-based architecture.&lt;ref name=&quot;AutoMQ-1&quot;/&gt;&lt;/blockquote&gt;

SMP systems allow any processor to work on any task no matter where the data for that task is located in memory, provided that each task in the system is not in execution on two or more processors at the same time. With proper [[operating system]] support, SMP systems can easily move tasks between processors to balance the workload efficiently.

==History==
The earliest production system with multiple identical processors was the Burroughs [[B5000]], which was functional around 1961. However at run-time this was [[Asymmetric multiprocessing#Burroughs B5000 and B5500|asymmetric]], with one processor restricted to application programs while the other processor mainly handled the operating system and hardware interrupts.  The Burroughs D825 first implemented SMP in 1962.&lt;ref&gt;{{cite web|url=http://ei.cs.vt.edu/~history/Parallel.html|title=The History of the Development of Parallel Computing|author=Gregory V. Wilson|date=October 1994}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://ed-thelen.org/comp-hist/BRL64-b.html#BURROUGHS-D825|title=A Fourth Survey of Domestic Electronic Digital Computing Systems|author=Martin H. Weik|publisher=[[Ballistic Research Laboratories]], [[Aberdeen Proving Grounds]]|at=Burroughs D825|date=January 1964}}&lt;/ref&gt;

IBM offered dual-processor computer systems based on its [[IBM System/360|System/360]] [[IBM System/360 Model 65|Model 65]] and the closely related [[IBM System/360 Model 67|Model 67]]&lt;ref&gt;{{cite book
 |     publisher = IBM
 |      title = IBM System/360 Model 65 Functional Characteristics
 |         id = A22-6884-3
 |    version = Fourth Edition
 |       date = September 1968
 |        url = http://www.bitsavers.org/pdf/ibm/360/funcChar/A22-6884-3_360-65_funcChar.pdf}}&lt;/ref&gt; and 67–2.&lt;ref&gt;{{cite book
 |    publisher = IBM
 |     title = IBM System/360 Model 67 Functional Characteristics
 |         id = GA27-2719-2
 |        url = http://www.bitsavers.org/pdf/ibm/360/funcChar/GA27-2719-2_360-67_funcChar.pdf
 |   version = Third Edition
 |      date = February 1972}}&lt;/ref&gt;  The operating systems that ran on these machines were [[OS/360]] M65MP&lt;ref&gt;[http://doi.acm.org/10.1145/800186.810634 M65MP: An Experiment in OS/360 multiprocessing]&lt;/ref&gt; and [[TSS/360]]. Other software developed at universities, notably the [[Michigan Terminal System]] (MTS), used both CPUs. Both processors could access data channels and initiate I/O.  In OS/360 M65MP, peripherals could generally be attached to either processor since the operating system kernel ran on both processors (though with a &quot;big lock&quot; around the I/O handler).&lt;ref&gt;{{cite book |url=http://bitsavers.org/pdf/ibm/360/os/R21.7_Apr73/plm/GY28-6616-9_OS_IO_Superv_PLM_R21.7_Apr73.pdf |title=Program Logic Manual, OS I/O Supervisor Logic, Release 21 (R21.7) |publisher=IBM |id=GY28-6616-9 |edition=Tenth |date=April 1973}}&lt;/ref&gt;  The MTS supervisor (UMMPS) has the ability to run on both CPUs of the IBM System/360 model 67–2. Supervisor locks were small and used to protect individual common data structures that might be accessed simultaneously from either CPU.&lt;ref&gt;[https://1a9f2076-a-62cb3a1a-s-sites.googlegroups.com/site/michiganterminalsystem/documentation/documents/timeSharingSupervisorPrograms-1971.pdf?attachauth=ANoY7crPBadRVtxTmN8sqSjFc3xC84Q_pDpvpRo7VRWz0_Ql-UKQ2SVe6hJ7lVOjGZbLkOSXco8c9_ZI6TmQZS8EpBTMlByIPM4iByyUXlXE__YfWN0jqwIQglhyvR0oSxl0I_C0JenDItLzN4btLtkug9HSHRX1s-WtlkSQ-pzJLpczJYsuzTvZVIggSTW0arjTnQsls6xcrCsMcyl58Y98Q0Sw2yecmFLiTcYjnYrgAhLGSu9b2s28oV04R6_6p6fD8UUjvnRawHn7N6qFgRIEuGj4QuZlkthZM5_fZwaPyXvLxccgLCk%3D&amp;attredirects=0 ''Time Sharing Supervisor Programs''] by Mike Alexander (May 1971) has information on MTS, TSS, CP/67, and Multics&lt;/ref&gt;

Other mainframes that supported SMP included the [[UNIVAC 1100/2200 series#1108|UNIVAC 1108 II]], released in 1965, which supported up to three CPUs, and the [[GE-600 series|GE-635 and GE-645]],&lt;ref&gt;{{cite book|url=http://www.bitsavers.org/pdf/ge/GE-6xx/CPB-371A_GE-635_System_Man_Jul64.pdf|title=GE-635 System Manual|date=July 1964|publisher=[[General Electric]]}}&lt;/ref&gt;&lt;ref&gt;{{cite book|url=http://www.bitsavers.org/pdf/ge/GE-645/GE-645_SystemMan_Jan68.pdf|title=GE-645 System Manual|date=January 1968|publisher=General Electric}}&lt;/ref&gt; although [[GECOS]] on multiprocessor GE-635 systems ran in a master-slave asymmetric fashion, unlike [[Multics]] on multiprocessor GE-645 systems, which ran in a symmetric fashion.&lt;ref&gt;{{cite newsgroup|url=https://groups.google.com/d/msg/alt.folklore.computers/v-hkdKaPTXc/MX7UI3DgOokJ|title=Fear of Multiprocessing?|author=Richard Shetron|date=May 5, 1998|newsgroup=alt.folklore.computers|message-id=354e95a9.0@news.wizvax.net}}&lt;/ref&gt;

Starting with its version 7.0 (1972), [[Digital Equipment Corporation]]'s operating system [[TOPS-10]] implemented the SMP feature, the earliest system running SMP was the [[PDP-10|DECSystem 1077]] dual KI10 processor system.&lt;ref&gt;[http://www.ultimate.com/phil/pdp10/10periphs DEC 1077 and SMP]&lt;/ref&gt; Later KL10 system could aggregate up to 8 CPUs in a SMP manner. In contrast, DECs first multi-processor [[VAX]] system, the VAX-11/782, was asymmetric,&lt;ref&gt;[http://www.bitsavers.org/pdf/dec/vax/EG-21731-18_VAX_Product_Sales_Guide_Apr82.pdf VAX Product Sales Guide, pages 1-23 and 1-24]: the VAX-11/782 is described as an asymmetric multiprocessing system in 1982&lt;/ref&gt; but later VAX multiprocessor systems were SMP.&lt;ref&gt;[http://www.bitsavers.org/pdf/dec/vax/8800/EK-8840H-UG-001_88xx_System_Hardware_Users_Guide_Mar88.pdf VAX 8820/8830/8840 System Hardware User's Guide]: by 1988 the VAX operating system was SMP&lt;/ref&gt;

Early commercial Unix SMP implementations included the [[Sequent Computer Systems]] Balance 8000 (released in 1984) and Balance 21000 (released in 1986).&lt;ref&gt;{{Cite book |last1 = Hockney |first1 = R.W. |last2 = Jesshope |first2 = C.R. |title = Parallel Computers 2: Architecture, Programming and Algorithms |publisher = Taylor &amp; Francis |year = 1988 | pages = 46 |isbn = 0-85274-811-6}}&lt;/ref&gt; Both models were based on 10&amp;nbsp;MHz [[National Semiconductor]] [[NS320xx|NS32032]] processors, each with a small write-through cache connected to a common memory to form a [[Shared memory architecture|shared memory]] system.  Another early commercial Unix SMP implementation was the NUMA based Honeywell Information Systems Italy XPS-100 designed by Dan Gielan of VAST Corporation in 1985. Its design supported up to 14 processors, but due to electrical limitations, the largest marketed version was a dual processor system.  The operating system was derived and ported by VAST Corporation from AT&amp;T 3B20 Unix SysVr3 code used internally within AT&amp;T.

Earlier non-commercial multiprocessing UNIX ports existed, including a port named MUNIX created at the [[Naval Postgraduate School]] by 1975.&lt;ref&gt;{{Cite web|url=https://core.ac.uk/download/pdf/36714194.pdf|title=MUNIX, A Multiprocessing Version Of UNIX|last=Hawley|first=John Alfred|date=June 1975|website=core.ac.uk|access-date=11 November 2018}}&lt;/ref&gt;

== Uses ==
[[Time-sharing]] and [[server (computing)|server]] systems can often use SMP without changes to applications, as they may have multiple [[Process (computing)|processes]] running in parallel, and a system with more than one process running can run different processes on different processors.

On [[personal computer]]s, SMP is less useful for applications that have not been modified.  If the system rarely runs more than one process at a time, SMP is useful only for applications that have been modified for [[Thread (computer science)|multithreaded]] (multitasked) processing.  Custom-programmed [[software]] can be written or modified to use multiple threads, so that it can make use of multiple processors.

Multithreaded programs can also be used in time-sharing and server systems that support multithreading, allowing them to make more use of multiple processors.

== Advantages/disadvantages ==

In current SMP systems, all of the processors are tightly coupled inside the same box with a bus or switch; on earlier SMP systems, a single CPU took an entire cabinet.  Some of the components that are shared are global memory, disks, and I/O devices.  Only one copy of an OS runs on all the processors, and the OS must be designed to take advantage of this architecture.  Some of the basic advantages involves cost-effective ways to increase throughput.  To solve different problems and tasks, SMP applies multiple processors to that one problem, known as [[parallel programming]].

However, there are a few limits on the scalability of SMP due to [[cache coherence]] and shared objects.

== Programming ==

Uniprocessor and SMP systems require different programming methods to achieve maximum performance. Programs running on SMP systems may experience an increase in performance even when they have been written for uniprocessor systems. This is because hardware [[interrupts]] usually suspends program execution while the [[Kernel (operating system)|kernel]] that handles them can execute on an idle processor instead. The effect in most applications (e.g. games) is not so much a performance increase as the appearance that the program is running much more smoothly. Some applications, particularly building software and some [[distributed computing]] projects, run faster by a factor of (nearly) the number of additional processors.  (Compilers by themselves are single threaded, but, when building a software project with multiple compilation units, if each compilation unit is handled independently, this creates an [[embarrassingly parallel]] situation across the entire multi-compilation-unit project, allowing near linear scaling of compilation time. Distributed computing projects are inherently parallel by design.)

Systems programmers must build support for SMP into the [[operating system]], otherwise, the additional processors remain idle and the system functions as a uniprocessor system.

SMP systems can also lead to more complexity regarding instruction sets. A homogeneous processor system typically requires extra registers for &quot;special instructions&quot; such as SIMD (MMX, SSE, etc.), while a heterogeneous system can implement different types of hardware for different instructions/uses.

== Performance ==

When more than one program executes at the same time, an SMP system has considerably better performance than a uni-processor, because different programs can run on different CPUs simultaneously.  Similarly, [[Asymmetric multiprocessing]] (AMP) usually allows only one processor to run a program or task at a time.  For example, AMP can be used in assigning specific tasks to CPU based to priority and importance of task completion.  AMP was created well before SMP in terms of handling multiple CPUs, which explains the lack of performance based on the example provided.

In cases where an SMP environment processes many jobs, administrators often experience a loss of hardware efficiency. Software programs have been developed to schedule jobs and other functions of the computer so that the processor utilization reaches its maximum potential. Good software packages can achieve this maximum potential by scheduling each CPU separately, as well as being able to integrate multiple SMP machines and clusters.

Access to RAM is serialized; this and [[cache coherency]] issues causes performance to lag slightly behind the number of additional processors in the system.

== Alternatives ==

[[Image:Shared memory.svg|right|350px|thumb|Diagram of a typical SMP system. Three processors are connected to the same memory module through a [[system bus]] or [[crossbar switch]] ]]

SMP uses a single shared [[system bus]] that represents one of the earliest styles of multiprocessor machine architectures, typically used for building smaller computers with up to 8 processors.

Larger computer systems might use newer architectures such as [[Non-Uniform Memory Access|NUMA]] (Non-Uniform Memory Access), which dedicates different memory banks to different processors.  In a NUMA architecture, processors may access local memory quickly and remote memory more slowly.  This can dramatically improve memory throughput as long as the data are localized to specific processes (and thus processors). On the downside, NUMA makes the cost of moving data from one processor to another, as in workload balancing, more expensive. The benefits of NUMA are limited to particular workloads, notably on [[Server (computing)|server]]s where the data are often associated strongly with certain tasks or users.

Finally, there is [[computer cluster]]ed multiprocessing (such as [[Beowulf (computing)|Beowulf]]), in which not all memory is available to all processors. Clustering techniques are used fairly extensively to build very large supercomputers.

== Variable SMP ==
{{POV section|talk=Undue weight on vSMP|date=August 2017}}

Variable Symmetric Multiprocessing (vSMP) is a specific mobile use case technology initiated by NVIDIA. This technology includes an extra fifth core in a quad-core device, called the Companion core, built specifically for executing tasks at a lower frequency during mobile active standby mode, video playback, and music playback.

Project Kal-El ([[Tegra 3]]),&lt;ref name=&quot;AutoMQ-4&quot; /&gt; patented by NVIDIA, was the first SoC (System on Chip) to implement this new vSMP technology. This technology not only reduces mobile power consumption during active standby state, but also maximizes quad core performance during active usage for intensive mobile applications. Overall this technology addresses the need for increase in battery life performance during active and standby usage by reducing the power consumption in mobile processors.

Unlike current SMP architectures, the vSMP Companion core is OS transparent meaning that the operating system and the running applications are totally unaware of this extra core but are still able to take advantage of it. Some of the advantages of the vSMP architecture includes cache coherency, OS efficiency, and power optimization. The advantages for this architecture are explained below:

*Cache Coherency: There are no consequences for synchronizing caches between cores running at different frequencies since vSMP does not allow the Companion core and the main cores to run simultaneously.
*OS Efficiency: It is inefficient when multiple CPU cores are run at different asynchronous frequencies because this could lead to possible scheduling issues.{{How|date=August 2017}} With vSMP, the active CPU cores will run at similar frequencies to optimize OS scheduling.
*Power Optimization: In asynchronous clocking based architecture, each core is on a different power plane to handle voltage adjustments for different operating frequencies. The result of this could impact performance.{{How|date=August 2017}} vSMP technology is able to dynamically enable and disable certain cores for active and standby usage, reducing overall power consumption.

These advantages lead the vSMP architecture to considerably benefit{{Peacock term|date=August 2017}} over other architectures using asynchronous clocking technologies.

== See also ==
* [[Asymmetric multiprocessing]]
* [[Binary Modular Dataflow Machine]]
* [[Locale (computer hardware)]]
* [[Massively parallel]]
* [[Partitioned global address space]]
* [[Simultaneous multithreading]] – where functional elements of a CPU core are allocated across multiple threads of execution
* [[Software lockout]]
* [[Xeon Phi]]

== References ==
{{Reflist|refs=
&lt;ref name=&quot;AutoMQ-1&quot;&gt;{{cite journal |title= Trends in Multi-core DSP Platforms |authors= Lina J. Karam, Ismail AlKamal, Alan Gatherer, Gene A. Frantz, David V. Anderson, Brian L. Evans |journal= IEEE Signal Processing Magazine|volume= 26 |issue= 6 |pages= 38–49 |year= 2009 |url= http://users.ece.utexas.edu/~bevans/papers/2009/multicore/MulticoreDSPsForIEEESPMFinal.pdf |bibcode= 2009ISPM...26...38K |doi= 10.1109/MSP.2009.934113 |s2cid= 9429714 }}&lt;/ref&gt;
&lt;ref name=&quot;AutoMQ-4&quot;&gt;[http://www.nvidia.com/content/pdf/tegra_white_papers/tegra-whitepaper-0911b.pdf Variable SMP – A Multi-Core CPU Architecture for Low Power and High Performance. NVIDIA. 2011.]&lt;/ref&gt;
}}

== External links ==
* [http://ei.cs.vt.edu/~history/Parallel.html History of Multi-Processing]
* [http://www.ibm.com/developerworks/library/l-linux-smp/ Linux and Multiprocessing]
* [https://www.amd.com/us-en/Processors/ProductInformation/0,,30_118,00.html AMD]

{{Parallel computing}}

[[Category:Classes of computers]]
[[Category:Flynn's taxonomy]]
[[Category:Parallel computing]]</text>
      <sha1>kzqgy0w45tbw1fcvdvib58swjvl3uto</sha1>
    </revision>
  </page>
  <page>
    <title>SMP</title>
    <ns>0</ns>
    <id>50319</id>
    <revision>
      <id>978508477</id>
      <parentid>977851375</parentid>
      <timestamp>2020-09-15T09:54:32Z</timestamp>
      <contributor>
        <ip>141.157.210.174</ip>
      </contributor>
      <comment>/* Entertainment */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3107" xml:space="preserve">{{wiktionary|SMP}}
'''SMP''' may refer to:
{{TOC right}}
==Organisations==
* Scale Model Products, a plastic promotional model company during the 1950s, purchased by [[Aluminum Model Toys]]
* [[School Mathematics Project]], a developer of mathematics textbooks for secondary schools based in Southampton, UK
* ''[[Sekolah Menengah Pertama]]'', the name for junior high / middle schools in Indonesia
* [[Shanghai Municipal Police]], the police force of the International Settlement in Shanghai up to 1943
* [[Sipah-e-Muhammad Pakistan]], a Shi'a Muslim militant group and a former political party
* [[Sisters of Mary of the Presentation]], a Roman Catholic religious institute.
* SMP Bank, a Russian bank with over 100 branches that was sanctioned by the United States in 2014 in response to the Russian annexation of Crimea
* [[Standard Motor Products]] (NYSE: SMP), US automotive aftermarket company
* ''{{lang|fi|[[Suomen maaseudun puolue]]}}'', the Finnish Rural Party, a historical political party in Finland

==Science and technology==
* [[Shape-memory polymer]], polymeric smart materials
* Signal Message Processor, a line card in a [[Multifunctional Information Distribution System]] radio communication standard in military technology
* [[Silyl modified polymers]], chemical compounds used in adhesives and sealants
* [[Simulation Model Portability]], a standard for space mission simulators developed by ESA and other European organisations
Cathepsin E
* [[Skimmed milk powder]], a manufactured dairy product
* [[Slow-moving proteinase]], the enzyme 
* [[Socialist millionaire problem]], a protocol in cryptography for two parties to verify the identity of the remote party through the use of a shared secret
* [[Sorbitan monopalmitate]], a food additive
* [[SOTA Mapping Project]], a website for radio amateurs
* [[Stable marriage problem]] (also termed stable matching problem), a mathematical problem
* Stable massive particle, a particle in particle physics sought by the [[MoEDAL experiment]]
* [[Surface-mount package]], electronic components with packages utilizing surface-mount technology

===Computing===
* Serial Management Protocol, a computer transport protocol for managing [[Serial attached SCSI#Characteristics|Serial attached SCSI]] (SAS)
* [[SMP/E]] (System Modification Program/Extended), package manager for an IBM mainframe operating system
* [[Supplementary Multilingual Plane]], groups of Unicode characters
* [[Symbolic Manipulation Program]], predecessor of computer algebra program Mathematica    
* [[Symmetric multiprocessing]], computing with multiple processors controlled by a single operating system.

==Entertainment==
* [[SMP (band)]]
* ''[[Super Mario Party]]'', a 2018 Nintendo Switch video game
* Survival Multiplayer, a common ''[[Minecraft]]'' server gamemode.

==Other uses==
* [[SMP Clothing]], an American company 
* [[Scott Putesky]], an American musician
* Securities Markets Program of the [[European Central Bank]]
* [[Single member plurality]], an electoral system
* [[South Magnetic Pole]]
* [[Statutory Maternity Pay]] in the UK

{{disambiguation}}</text>
      <sha1>t1t171kwvnd30ulmjgovztt65erq4yl</sha1>
    </revision>
  </page>
  <page>
    <title>Credit money</title>
    <ns>0</ns>
    <id>50320</id>
    <redirect title="Credit theory of money" />
    <revision>
      <id>515390336</id>
      <parentid>511054601</parentid>
      <timestamp>2012-10-01T00:10:42Z</timestamp>
      <contributor>
        <username>Xqbot</username>
        <id>8066546</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[Credit theory of money]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="36" xml:space="preserve">#REDIRECT [[Credit theory of money]]</text>
      <sha1>rpq63xffo1snbrzv9wmey6oy637tvmy</sha1>
    </revision>
  </page>
  <page>
    <title>Amy Tan</title>
    <ns>0</ns>
    <id>50321</id>
    <revision>
      <id>991174542</id>
      <parentid>991054222</parentid>
      <timestamp>2020-11-28T17:44:23Z</timestamp>
      <contributor>
        <username>Ira Leviton</username>
        <id>25046916</id>
      </contributor>
      <comment>Fixed a typo in a reference and clarified the lede.  Please see [[Help Category:CS1 maint: extra punctuation]].</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21835" xml:space="preserve">{{short description|American novelist}}
{{Use American English|date=August 2020}}
{{Use mdy dates|date=June 2013}}
{{Infobox writer &lt;!-- for more information see [[:Template:Infobox writer/doc]] --&gt;
| name         = Amy Tan
| image        = Amy Tan.jpg
| image_size   = 
| pseudonym    = 
| birth_name   = Amy Ruth Tan
| birth_date   = {{birth date and age|1952|2|19|mf=y}}
| birth_place  = [[Oakland, California]]
| death_date   = 
| death_place  = 
| education    = [[San Jose State University]] ([[Bachelor of Arts|BA]], [[Master of Arts|MA]])
| occupation   = Writer
| subject      = 
| movement     = 
| notableworks = ''[[The Joy Luck Club (novel)|The Joy Luck Club]]'' (1989), ''[[The Bonesetter's Daughter]]'' (2001)
| signature    = Amy Tan's signature.png
| website      = {{URL|http://www.amytan.net/}}
| module       = 
{{chinese|child=yes|s=谭恩美|t=譚恩美|p=Tán Ēnměi|j=Taam4 Jan1mei5}}
}}
'''Amy Ruth Tan''' (born February 19, 1952) is an American author known for the novel ''[[The Joy Luck Club (novel)|The Joy Luck Club]],'' which was adapted into the film [[The Joy Luck Club (film)|The Joy Luck Club]] in 1993 by director [[Wayne Wang]].

Tan has written several other novels, including ''[[The Kitchen God's Wife]]'', ''[[The Hundred Secret Senses]]'', ''[[The Bonesetter's Daughter]]'', ''[[Saving Fish from Drowning]]'', and ''[[The Valley of Amazement]]''. Tan's latest book is a memoir entitled ''Where The Past Begins: A Writer's Memoir'' (2017).&lt;ref&gt;{{Cite book|url=https://www.theguardian.com/books/2018/jan/22/amy-tan-writing-exhilarating-wish-hadnt-been-published-memoir-joy-luck-club|title=Where the Past Begins: A Writer's Memoir|date=2017-10-17|publisher=Ecco|isbn=9780062319296|location=New York|language=en}}&lt;/ref&gt; In addition to these, Tan has written two [[children's books]]: ''The Moon Lady'' (1992) and ''[[Sagwa, the Chinese Siamese Cat (book)|Sagwa, the Chinese Siamese Cat]]'' (1994), which was turned into an animated series that aired on [[PBS]].

==Early life and education==
Tan was born in [[Oakland, California]]. She is the second of three children born to [[Chinese immigrants]] John and Daisy Tan. Her father was an [[electrical engineer]] and [[Baptist]] minister who traveled to the United States in order to escape the chaos of the [[Chinese Civil War]].&lt;ref&gt;{{cite news | url = http://articles.nydailynews.com/2001-02-27/entertainment/18179778_1_amy-tan-daisy-tan-joy-luck-club | title = Mother As Tormented Muse Amy Tan Drew On A Dark Past For 'Daughter' | author = Sherryl Connelly | date = February 27, 2001 | website = nydailynews.com | publisher = [[New York Daily News]] | access-date = 15 December 2013 | archive-url = https://web.archive.org/web/20110314065627/http://articles.nydailynews.com/2001-02-27/entertainment/18179778_1_amy-tan-daisy-tan-joy-luck-club | archive-date = 2011-03-14}}&lt;/ref&gt;&lt;ref name=achieve/&gt; Tan attended [[Marian A. Peterson High School]] in [[Sunnyvale, California|Sunnyvale]] for one year. When she was fifteen years old, her father and older brother Peter both died of [[brain tumor]]s within six months of each other.&lt;ref name=&quot;Huntley1998&quot;&gt;{{Cite book|title = Amy Tan: A Critical Companion|last = Huntley|first = E.D.|publisher = Greenwood Press|year = 1998|isbn = 0313302073|location = Westport, Conn.|pages = [https://archive.org/details/amytancriticalco00hunt/page/n22 5]–7|url = https://archive.org/details/amytancriticalco00hunt|url-access = registration}}&lt;/ref&gt;

Daisy subsequently moved Amy and her younger brother, John Jr., to Switzerland, where Amy finished high school at the [[Institut Monte Rosa]], [[Montreux]].&lt;ref&gt;&quot;The Archives of my Personality&quot;, address to American Association of Museums General Session (Los Angeles), May 26, 2010&lt;/ref&gt; During this period, Amy learned about her mother's previous marriage to another man in [[China]], of their four children (a son who died as a toddler and three daughters), and how her mother left these children behind in [[Shanghai]]. This incident was the basis for Tan's first novel ''[[The Joy Luck Club (novel)|The Joy Luck Club]]''.&lt;ref name=achieve&gt;{{cite web|title= Amy Tan Biography and Interview |website=www.achievement.org|publisher=[[American Academy of Achievement]]|url=https://www.achievement.org/achiever/amy-tan/#interview}}&lt;/ref&gt; In 1987, Amy traveled with Daisy to China. There, Amy met her three half-sisters.&lt;ref&gt;{{cite web | url = http://us.penguingroup.com/static/rguides/us/joy_luck_club.html | title = Penguin Reading Guides - The Joy Luck Club - Amy Tan | access-date = August 7, 2010 | archive-url = https://web.archive.org/web/20100724064451/http://us.penguingroup.com/static/rguides/us/joy_luck_club.html | archive-date = July 24, 2010 | url-status = dead | df = mdy-all }}&lt;/ref&gt;
