{{Redirect category shell|
{{R from move}}
{{R from short name}}
{{R hatnote}}
{{R printworthy}}
}}</text>
      <sha1>fns7zdb9q5fxpt0lmdv2wotbb7prw8s</sha1>
    </revision>
  </page>
  <page>
    <title>Well ordered</title>
    <ns>0</ns>
    <id>50576</id>
    <redirect title="Well-order" />
    <revision>
      <id>15945270</id>
      <timestamp>2002-04-27T11:10:07Z</timestamp>
      <contributor>
        <username>Damian Yerrick</username>
        <id>1</id>
      </contributor>
      <minor />
      <comment>=&amp;gt; Well-order</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="24" xml:space="preserve">#REDIRECT [[Well-order]]</text>
      <sha1>3xm4idrbio98gz96jhtoy318pnljydf</sha1>
    </revision>
  </page>
  <page>
    <title>Well ordering</title>
    <ns>0</ns>
    <id>50577</id>
    <redirect title="Well-order" />
    <revision>
      <id>15945271</id>
      <timestamp>2002-04-27T11:10:56Z</timestamp>
      <contributor>
        <username>Damian Yerrick</username>
        <id>1</id>
      </contributor>
      <minor />
      <comment>stupid stopwords =&amp;gt; Well-order</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="24" xml:space="preserve">#REDIRECT [[Well-order]]</text>
      <sha1>3xm4idrbio98gz96jhtoy318pnljydf</sha1>
    </revision>
  </page>
  <page>
    <title>Queueing theory</title>
    <ns>0</ns>
    <id>50578</id>
    <revision>
      <id>987458389</id>
      <parentid>984139932</parentid>
      <timestamp>2020-11-07T05:07:20Z</timestamp>
      <contributor>
        <username>Citation bot</username>
        <id>7903804</id>
      </contributor>
      <comment>Alter: journal, title, pages, url. URLs might have been internationalized/anonymized. Add: doi-broken-date, s2cid, author pars. 1-1. Removed parameters. Formatted [[WP:ENDASH|dashes]]. Some additions/deletions were actually parameter name changes. | You can [[WP:UCB|use this bot]] yourself. [[WP:DBUG|Report bugs here]]. | Suggested by AManWithNoPlan | All pages linked from cached copy of User:AManWithNoPlan/sandbox2 | via #UCB_webform_linked 1723/3977</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="33784" xml:space="preserve">{{short description|Mathematical study of waiting lines, or queues}}
{{redirect|First come, first served|the Kool Keith album|First Come, First Served}}
[[File:ServidorParalelo.jpg|thumb|right|[[Queueing theory#Queueing networks|Queue networks]] are systems in which single queues are connected by a routing network. In this image, servers are represented by circles, queues by a series of rectangles and the routing network by arrows. In the study of queue networks one typically tries to obtain the [[equilibrium distribution]] of the network, although in many applications the study of the [[transient state]] is fundamental.]]

'''Queueing theory''' is the mathematical study of waiting lines, or [[wikt:queue|queues]].&lt;ref name=&quot;sun&quot;&gt;{{cite book | title = Probability, Statistics and Queueing Theory | first = V. | last = Sundarapandian | publisher = PHI Learning | year = 2009 | chapter = 7. Queueing Theory | isbn = 978-8120338449 }}&lt;/ref&gt; A queueing model is constructed so that queue lengths and waiting time can be predicted.&lt;ref name=&quot;sun&quot; /&gt; Queueing theory is generally considered a branch of [[operations research]] because the results are often used when making business decisions about the resources needed to provide a service.

Queueing theory has its origins in research by [[Agner Krarup Erlang]] when he created models to describe the system of Copenhagen Telephone Exchange company, a Danish company.&lt;ref name=&quot;sun&quot; /&gt; The ideas have since seen applications including [[telecommunication]], [[Traffic engineering (transportation)|traffic engineering]], [[computing]]&lt;ref&gt;{{cite web
  | last = Lawrence W. Dowdy, Virgilio A.F. Almeida
  | first = Daniel A. Menasce
  | title = Performance by Design: Computer Capacity Planning by Example
  | url = http://www.cs.gmu.edu/~menasce/perfbyd/
  }}&lt;/ref&gt;
and, particularly in [[industrial engineering]], in the design of factories, shops, offices and hospitals, as well as in project management.&lt;ref&gt;{{Cite news
  | first = Kira
  | last = Schlechter
  | title = Hershey Medical Center to open redesigned emergency room
  | newspaper = The Patriot-News
  | pages =
  | date = March 2, 2009
  | url = http://www.pennlive.com/midstate/index.ssf/2009/03/hershey_med_to_open_redesigned.html
  }}&lt;/ref&gt;&lt;ref&gt;{{cite book |url= http://www.cass.city.ac.uk/media/stories/story_96_105659_69284.html |accessdate= 2008-05-20 |author= Mayhew, Les |author2= Smith, David |date= December 2006 |title= Using queuing theory to analyse completion times in accident and emergency departments in the light of the Government 4-hour target |publisher= [[Cass Business School]] |isbn= 978-1-905752-06-5 }}{{dead link|date=April 2018 |bot=InternetArchiveBot |fix-attempted=yes }}&lt;/ref&gt;

== Spelling ==

The spelling &quot;queueing&quot; over &quot;queuing&quot; is typically encountered in the academic research field. In fact, one of the flagship journals of the profession is ''[[Queueing Systems]]''.

== Single queueing nodes ==

A queue, or queueing node can be thought of as nearly a [[black box]]. Jobs or &quot;customers&quot; arrive to the queue, possibly wait some time, take some time being processed, and then depart from the queue.

[[File:Black box queue diagram.png|thumb|350px|center|A black box. Jobs arrive to, and depart from, the queue.]]

The queueing node is not quite a pure black box, however, since some information is needed about the inside of the queuing node. The queue has one or more &quot;servers&quot; which can each be paired with an arriving job until it departs, after which that server will be free to be paired with another arriving job.

[[File:Queueing node service digram.png|thumb|500px|center|A queueing node with 3 servers. Server '''a''' is idle, and thus an arrival is given to it to process. Server '''b''' is currently busy and will take some time before it can complete service of its job. Server '''c''' has just completed service of a job and thus will be next to receive an arriving job.]]

An analogy often used is that of the cashier at a supermarket. There are other models, but this is one commonly encountered in the literature. Customers arrive, are processed by the cashier, and depart. Each cashier processes one customer at a time, and hence this is a queueing node with only one server. A setting where a customer will leave immediately if the cashier is busy when the customer arrives, is referred to as a queue with no buffer (or no &quot;waiting area&quot;, or similar terms). A setting with a waiting zone for up to ''n'' customers is called a queue with a buffer of size ''n''.

=== Birth-death process ===

The behaviour of a single queue (also called a &quot;queueing node&quot;) can be described by a [[birth–death process]], which describes the arrivals and departures from the queue, along with the number of jobs (also called &quot;customers&quot; or &quot;requests&quot;, or any number of other things, depending on the field) currently in the system. An arrival increases the number of jobs by 1, and a departure (a job completing its service) decreases ''k'' by 1.

[[File:BD-proces.png|thumb|center|500px|A birth–death process. The values in the circles represent the state of the birth-death process. For a queueing system, ''k'' is the number of jobs in the system (either being serviced or waiting if the queue has a buffer of waiting jobs). The system transitions between values of ''k'' by &quot;births&quot; and &quot;deaths&quot; which occur at rates given by various values of ''λ''&lt;sub&gt;''i''&lt;/sub&gt; and ''μ''&lt;sub&gt;''i''&lt;/sub&gt;, respectively. Further, for a queue, the arrival rates and departure rates are generally considered not to vary with the number of jobs in the queue, so a single average rate of arrivals/departures per unit time to the queue is assumed. Under this assumption, this process has an arrival rate of ''λ'' = ''λ''&lt;sub&gt;1&lt;/sub&gt;, ''λ''&lt;sub&gt;2&lt;/sub&gt;, ..., ''λ''&lt;sub&gt;''k''&lt;/sub&gt; and a departure rate of ''μ'' = ''μ''&lt;sub&gt;1&lt;/sub&gt;, ''μ''&lt;sub&gt;2&lt;/sub&gt;, ..., ''μ''&lt;sub&gt;''k''&lt;/sub&gt; (see next figure).]]

[[File:Mm1_queue.svg|thumb|center|250px|A queue with 1 server, arrival rate ''λ'' and departure rate ''μ''.]]

==== Balance equations ====

The [[steady state]] equations for the birth-and-death process, known as the [[balance equation]]s, are as follows. Here &lt;math&gt;P_n&lt;/math&gt; denotes the steady state probability to be in state ''n''.

: &lt;math&gt;\mu_1 P_1 = \lambda_0 P_0&lt;/math&gt;
: &lt;math&gt;\lambda_0 P_0 + \mu_2 P_2 = (\lambda_1 + \mu_1) P_1&lt;/math&gt;
: &lt;math&gt;\lambda_{n-1} P_{n-1} + \mu_{n+1} P_{n+1} = (\lambda_n + \mu_n) P_n&lt;/math&gt;

The first two equations imply
: &lt;math&gt;P_1 = \frac{\lambda_0}{\mu_1} P_0&lt;/math&gt;
and
: &lt;math&gt;P_2 = \frac{\lambda_1}{\mu_2} P_1 + \frac{1}{\mu_2} (\mu_1 P_1 - \lambda_0 P_0) = \frac{\lambda_1}{\mu_2} P_1 = \frac{\lambda_1 \lambda_0}{\mu_2 \mu_1} P_0.&lt;/math&gt;

By mathematical induction,
: &lt;math&gt;P_n = \frac{\lambda_{n-1} \lambda_{n-2} \cdots \lambda_0}{\mu_n \mu_{n-1} \cdots \mu_1} P_0 = P_0 \prod_{i = 0}^{n-1} \frac{\lambda_i}{\mu_{i+1}}.&lt;/math&gt;

The condition &lt;math&gt;\sum_{n = 0}^{\infty} P_n = P_0 + P_0 \sum_{n=1}^\infty \prod_{i=0}^{n-1} \frac{\lambda_i}{\mu_{i+1}} = 1&lt;/math&gt; leads to:
: &lt;math&gt;P_0 = \frac{1}{1 + \sum_{n=1}^{\infty}\prod_{i=0}^{n-1} \frac{\lambda_i}{\mu_{i+1}} },&lt;/math&gt;
which, together with the equation for &lt;math&gt;P_n&lt;/math&gt; &lt;math&gt;(n\geq1)&lt;/math&gt;, fully describes the required steady state probabilities.

=== Kendall's notation ===

Single queueing nodes are usually described using [[Kendall's notation]] in the form A/S/''c'' where ''A'' describes the distribution of durations between each arrival to the queue, ''S'' the distribution of service times for jobs and ''c'' the number of servers at the node.&lt;ref name=&quot;tijms&quot;&gt;Tijms, H.C, ''Algorithmic Analysis of Queues&quot;, Chapter 9 in  A First Course in Stochastic Models, Wiley, Chichester, 2003&lt;/ref&gt;&lt;ref&gt;{{Cite journal | last1 = Kendall | first1 = D. G. | authorlink1 = David George Kendall| title = Stochastic Processes Occurring in the Theory of Queues and their Analysis by the Method of the Imbedded Markov Chain | doi = 10.1214/aoms/1177728975 | jstor = 2236285| journal = The Annals of Mathematical Statistics | volume = 24 | issue = 3 | pages = 338–354 | year = 1953| pmid =  | pmc = | doi-access = free }}&lt;/ref&gt; For an example of the notation, the [[M/M/1 queue]] is a simple model where a single server serves jobs that arrive according to a [[Poisson process]] (where inter-arrival durations are [[exponentially distributed]]) and have exponentially distributed service times (the M denotes a [[Markov process]]). In an [[M/G/1 queue]], the G stands for &quot;general&quot; and indicates an arbitrary [[probability distribution]] for service times.

=== Example analysis of an M/M/1 queue ===

Consider a queue with one server and the following characteristics:
* ''λ'': the arrival rate (the expected time between each customer arriving, e.g. 30 seconds);
* ''μ'': the reciprocal of the mean service time (the expected number of consecutive service completions per the same unit time, e.g. per 30 seconds);
* ''n'': the parameter characterizing the number of customers in the system;
* ''P''&lt;sub&gt;''n''&lt;/sub&gt;: the probability of there being ''n'' customers in the system in steady state.

Further, let ''E''&lt;sub&gt;''n''&lt;/sub&gt; represent the number of times the system enters state ''n'', and ''L''&lt;sub&gt;''n''&lt;/sub&gt; represent the number of times the system leaves state ''n''. Then for all ''n'', |''E''&lt;sub&gt;''n''&lt;/sub&gt; − ''L''&lt;sub&gt;''n''&lt;/sub&gt;| ∈ {0, 1}. That is, the number of times the system leaves a state differs by at most 1 from the number of times it enters that state, since it will either return into that state at some time in the future (''E''&lt;sub&gt;''n''&lt;/sub&gt; = ''L''&lt;sub&gt;''n''&lt;/sub&gt;) or not (|''E''&lt;sub&gt;''n''&lt;/sub&gt; − ''L''&lt;sub&gt;''n''&lt;/sub&gt;| = 1).

When the system arrives at a steady state, the arrival rate should be equal to the departure rate.

Thus the balance equations
: &lt;math&gt;\mu P_1 = \lambda P_0&lt;/math&gt;
: &lt;math&gt;\lambda P_0 + \mu P_2 = (\lambda + \mu) P_1&lt;/math&gt;
: &lt;math&gt;\lambda P_{n-1} + \mu P_{n+1} = (\lambda + \mu) P_n&lt;/math&gt;
imply
: &lt;math&gt;P_n = \frac{\lambda}{\mu} P_{n-1},\ n=1,2,\ldots&lt;/math&gt;
The fact that &lt;math&gt;P_0 + P_1 + \cdots = 1&lt;/math&gt; leads to the [[geometric distribution]] formula
: &lt;math&gt;P_n = (1 - \rho) \rho^n&lt;/math&gt;
where &lt;math&gt;\rho = \frac{\lambda}{\mu} &lt; 1.&lt;/math&gt;

=== Simple two-equation queue ===

A common basic queuing system is attributed to [[Erlang distribution|Erlang]], and is a modification of [[Little's Law]]. Given an arrival rate ''λ'', a dropout rate ''σ'', and a departure rate ''μ'', length of the queue ''L'' is defined as:

: &lt;math&gt;L = \frac{\lambda - \sigma}{\mu}.&lt;/math&gt;

Assuming an exponential distribution for the rates, the waiting time ''W'' can be defined as the proportion of arrivals that are served. This is equal to the exponential survival rate of those who do not drop out over the waiting period, giving:

: &lt;math&gt;\frac{\mu}{\lambda} = e^{-W{\mu}}&lt;/math&gt;

The second equation is commonly rewritten as:

: &lt;math&gt;W = \frac{1}{\mu} \mathrm{ln}\frac{\lambda}{\mu}&lt;/math&gt;

The two-stage one-box model is common in epidemiology.&lt;ref&gt;{{Cite journal|last=Hernández-Suarez|first=Carlos|date=2010|title=An application of queuing theory to SIS and SEIS epidemic models|url=|journal=Math. Biosci.|volume=7|issue=4|pages=809–823|doi=10.3934/mbe.2010.7.809|pmid=21077709|doi-access=free}}&lt;/ref&gt;

== Overview of the development of the theory ==

In 1909, [[Agner Krarup Erlang]], a Danish engineer who worked for the Copenhagen Telephone Exchange, published the first paper on what would now be called queueing theory.&lt;ref&gt;{{cite web|url=http://pass.maths.org.uk/issue2/erlang/index.html |title=Agner Krarup Erlang (1878-1929) &amp;#124; plus.maths.org |publisher=Pass.maths.org.uk |accessdate=2013-04-22|date=1997-04-30 }}&lt;/ref&gt;&lt;ref&gt;{{Cite journal | last1 = Asmussen | first1 = S. R. | last2 = Boxma | first2 = O. J. | authorlink2 = Onno Boxma| doi = 10.1007/s11134-009-9151-8 | title = Editorial introduction | journal = [[Queueing Systems]] | volume = 63 | issue = 1–4 | pages = 1–2 | year = 2009 | pmid =  | pmc = | s2cid = 45664707 }}&lt;/ref&gt;&lt;ref&gt;{{cite journal | authorlink = Agner Krarup Erlang | first = Agner Krarup | last = Erlang
| title = The theory of probabilities and telephone conversations | journal = Nyt Tidsskrift for Matematik B | volume = 20 | pages = 33–39 | archiveurl = https://web.archive.org/web/20111001212934/http://oldwww.com.dtu.dk/teletraffic/erlangbook/pps131-137.pdf | archivedate = 2011-10-01 | url = http://oldwww.com.dtu.dk/teletraffic/erlangbook/pps131-137.pdf | year = 1909}}&lt;/ref&gt; He modeled the number of telephone calls arriving at an exchange by a [[Poisson process]] and solved the [[M/D/1 queue]] in 1917 and [[M/D/k queue|M/D/''k'' queue]]ing model in 1920.&lt;ref name=&quot;century&quot;&gt;{{Cite journal | last1 = Kingman | first1 = J. F. C. | authorlink1 = John Kingman | title = The first Erlang century—and the next | journal = [[Queueing Systems]] | volume = 63 | issue = 1–4 | pages = 3–4 | year = 2009 | doi = 10.1007/s11134-009-9147-4| s2cid = 38588726 }}&lt;/ref&gt; In Kendall's notation:

* M stands for Markov or memoryless and means arrivals occur according to a Poisson process;
* D stands for deterministic and means jobs arriving at the queue which require a fixed amount of service;
* ''k'' describes the number of servers at the queueing node (''k'' = 1, 2, ...).

If there are more jobs at the node than there are servers, then jobs will queue and wait for service

The M/G/1 queue was solved by [[Felix Pollaczek]] in 1930,&lt;ref&gt;Pollaczek, F., Ueber eine Aufgabe der Wahrscheinlichkeitstheorie, Math. Z. 1930&lt;/ref&gt; a solution later recast in probabilistic terms by [[Aleksandr Khinchin]] and now known as the [[Pollaczek–Khinchine formula]].&lt;ref name=&quot;century&quot; /&gt;&lt;ref name=&quot;century1&quot; /&gt;

After the 1940s queueing theory became an area of research interest to mathematicians.&lt;ref name=&quot;century1&quot;&gt;{{Cite journal | last1 = Whittle | first1 = P. | authorlink1 = Peter Whittle (mathematician)| doi = 10.1287/opre.50.1.227.17792 | title = Applied Probability in Great Britain | journal = [[Operations Research (journal)|Operations Research]]| volume = 50 | issue = 1 | pages = 227–239| year = 2002 | jstor = 3088474| pmid =  | pmc = | doi-access = free }}&lt;/ref&gt; In 1953 [[David George Kendall]] solved the GI/M/''k'' queue&lt;ref&gt;Kendall, D.G.:Stochastic processes occurring in the theory of queues and their analysis by the method of the imbedded Markov chain, Ann. Math. Stat. 1953&lt;/ref&gt; and introduced the modern notation for queues, now known as [[Kendall's notation]]. In 1957 Pollaczek studied the GI/G/1 using an [[integral equation]].&lt;ref&gt;Pollaczek, F., Problèmes Stochastiques posés par le phénomène de formation d'une queue&lt;/ref&gt; [[John Kingman]] gave a formula for the [[Mean sojourn time|mean waiting time]] in a [[G/G/1 queue]]: [[Kingman's formula]].&lt;ref&gt;{{Cite journal | last1 = Kingman | first1 = J. F. C. | authorlink = John Kingman| doi = 10.1017/S0305004100036094 | author2 = &lt;!-- (exclude bad crossref data) --&gt; | last2 = Atiyah | title = The single server queue in heavy traffic | journal = [[Mathematical Proceedings of the Cambridge Philosophical Society]]| volume = 57 | issue = 4 | pages = 902 | date=October 1961 | jstor = 2984229| pmid =  | pmc = }}&lt;/ref&gt;

[[Leonard Kleinrock]] worked on the application of queueing theory to [[message switching]] (in the early 1960s) and [[packet switching]] (in the early 1970s). His initial contribution to this field was his doctoral thesis at the [[Massachusetts Institute of Technology]] in 1962, published in book form in 1964 in the field of message switching. His theoretical work published in the early 1970s underpinned the use of packet switching in the [[ARPANET]], a forerunner to the Internet.

The [[matrix geometric method]] and [[matrix analytic method]]s have allowed queues with [[phase-type distribution|phase-type distributed]] inter-arrival and service time distributions to be considered.&lt;ref&gt;{{Cite journal | last1 = Ramaswami | first1 = V. | doi = 10.1080/15326348808807077 | title = A stable recursion for the steady state vector in markov chains of m/g/1 type | journal = Communications in Statistics. Stochastic Models | volume = 4 | pages = 183–188 | year = 1988 | pmid =  | pmc = }}&lt;/ref&gt;

Systems with coupled orbits are an important part in queueing theory in the application to wireless networks and signal processing. &lt;ref&gt;{{Cite journal | last1 = Morozov | first1 = E. |title = Stability analysis of a multiclass retrial system withcoupled orbit queues | doi = 10.1007/978-3-319-66583-2-6 | journal = Proceedings of 14th European Workshop| volume = 17| pages = 73–90 | year = 2017| doi-broken-date = 2020-11-07 | pmid =  | pmc = | doi-access = free }}&lt;/ref&gt;  

Problems such as performance metrics for the [[M/G/k queue|M/G/''k'' queue]] remain an open problem.&lt;ref name=&quot;century&quot; /&gt;&lt;ref name=&quot;century1&quot; /&gt;

== Service disciplines ==
[[File:Fifo queue.png|thumb|350px|First in first out (FIFO) queue example.]]
Various scheduling policies can be used at queuing nodes:

; [[FIFO (computing and electronics)|First in first out]]: Also called ''first-come, first-served'' (FCFS),&lt;ref name=&quot;Manuel&quot;&gt;{{cite book|last1=Manuel|first1=Laguna|title=Business Process Modeling, Simulation and Design|date=2011|publisher=Pearson Education India|isbn=9788131761359|page=178|url=https://books.google.com/books?id=d-V8c8YRJikC&amp;q=%22First-come%2C+first-served%22+business&amp;pg=PA178|accessdate=6 October 2017|language=en}}&lt;/ref&gt; this principle states that customers are served one at a time and that the customer that has been waiting the longest is served first.&lt;ref name=&quot;penttinen&quot;&gt;Penttinen A., ''Chapter 8 &amp;ndash; Queueing Systems'', Lecture Notes: S-38.145 - Introduction to Teletraffic Theory.&lt;/ref&gt;

; [[LIFO (computing)|Last in first out]]: This principle also serves customers one at a time, but the customer with the shortest [[Mean sojourn time|waiting time]] will be served first.&lt;ref name=&quot;penttinen&quot;/&gt; Also known as a [[Stack (data structure)|stack]].

; [[Processor sharing]]: Service capacity is shared equally between customers.&lt;ref name=&quot;penttinen&quot;/&gt;
