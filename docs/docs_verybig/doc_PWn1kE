== Specifications ==
Jakarta EE includes several specifications that serve different purposes, like generating web pages, reading and writing from a database in a transactional way, managing distributed queues.

The Jakarta EE APIs include several technologies that extend the functionality of the base [[Java Platform, Standard Edition|Java SE]] [[Application programming interface|API]]s, such as [[Jakarta Enterprise Beans]], [[Jakarta Connectors|connectors]], [[Jakarta Servlet|servlet]]s, [[Jakarta Server Pages]] and several [[web service]] technologies.

=== Web specifications ===
* [[Jakarta Servlet]]: defines how to manage HTTP requests, in a synchronous or asynchronous way. It is low level and other Jakarta EE specifications rely on it;
* Jakarta WebSocket: API specification that defines a set of APIs to service [[WebSocket]] connections;
* [[Jakarta Server Faces]]: a technology for constructing user interfaces out of components;
* [[Jakarta Expression Language]] (''EL'') is a simple language originally designed to satisfy the specific needs of web application developers. It is used specifically in Jakarta Server Faces to bind components to (backing) beans and in Contexts and Dependency Injection to name beans, but can be used throughout the entire platform.

=== Web service specifications ===
* [[Jakarta RESTful Web Services]] provides support in creating web services according to the [[Representational State Transfer]] (REST) architectural pattern;
* Jakarta JSON Processing is a set of specifications to manage information encoded in JSON format;
* Jakarta JSON Binding provides specifications to convert JSON information into or from Java classes;
* [[Jakarta XML Binding]] allows mapping XML into Java objects;
* [[Jakarta XML Web Services]] can be used to create SOAP web services.

=== Enterprise specifications ===
* Jakarta Contexts and Dependency Injection (''CDI'') is a specification to provide a [[dependency injection]] container;
* [[Jakarta Enterprise Beans]] (''EJB'') specification defines a set of lightweight APIs that an object container (the EJB container) will support in order to provide [[Transaction processing|transactions]] (using [[Jakarta Transactions|JTA]]), [[remote procedure call]]s (using [[Java remote method invocation|RMI]] or [[RMI-IIOP]]), [[concurrency control]], [[dependency injection]] and [[access control]] for business objects. This package contains the Jakarta Enterprise Beans classes and interfaces that define the contracts between the enterprise bean and its clients and between the enterprise bean and the ejb container.
* [[Jakarta Persistence]] (''JPA'') are specifications about object-relational mapping between relation database tables and Java classes.
* [[Jakarta Transactions]] (''JTA'') contains the interfaces and annotations to interact with the transaction support offered by Jakarta EE. Even though this API abstracts from the really low-level details, the interfaces are also considered somewhat low-level and the average application developer in Jakarta EE is either assumed to be relying on transparent handling of transactions by the higher level EJB abstractions, or using the annotations provided by this API in combination with CDI managed beans.
* [[Jakarta Messaging]] (''JMS'') provides a common way for Java programs to create, send, receive and read an enterprise messaging system's messages.

=== Other specifications ===
* Validation: This package contains the annotations and interfaces for the declarative validation support offered by the [[Bean Validation]] API. Bean Validation provides a unified way to provide constraints on beans (e.g. JPA model classes) that can be enforced cross-layer. In Jakarta EE, JPA honors bean validation constraints in the persistence layer, while [[JavaServer Faces|JSF]] does so in the view layer.
* Jakarta Batch provides the means for [[batch processing]] in applications to run long running background tasks that possibly involve a large volume of data and which may need to be periodically executed.
* [[Jakarta Connectors]] is a Java-based tool for connecting application servers and enterprise information systems (''EIS'') as part of enterprise application integration (''EAI''). This is a low-level API aimed at vendors that the average application developer typically does not come in contact with.

== Web profile ==
In an attempt to limit the footprint of web containers, both in physical and in conceptual terms, the web profile was created, a subset of the Jakarta EE specifications.
The Jakarta EE web profile comprises the following:
{| class=&quot;wikitable sortable&quot;
|-
! Specification !! Java EE 6&lt;ref&gt;{{cite web|url=http://jcp.org/en/jsr/detail?id=316|title=JSR 316: Java™ Platform, Enterprise Edition 6 (Java EE 6) Specification|website=[[Java Community Process]]}}&lt;/ref&gt; !! Java EE 7&lt;ref name=&quot;jcp.org&quot;/&gt; !! Java EE 8&lt;ref name=&quot;JavaEE8&quot;/&gt;&lt;br&gt;Jakarta EE 8&lt;ref&gt;{{cite web |url=https://jakarta.ee/specifications/webprofile/8/webprofile-spec-8.html#a43 |title=Required Components |department=WebProfile |website=Jakarta EE |access-date=2020-07-11}}&lt;/ref&gt;
!Jakarta EE 9&lt;ref&gt;{{Cite web|title=Jakarta EE WebProfile|url=https://jakarta.ee/specifications/webprofile/9/webprofile-spec-9-SNAPSHOT.html#web-profile-definition|access-date=2020-07-15|website=jakarta.ee}}&lt;/ref&gt;
|-
| [[Jakarta Servlet]] || 3.0 || 3.1 || 4.0
|5.0
|-
| [[Jakarta Server Pages]] (''JSP'') || 2.2 || 2.3 || 2.3
|3.0
|-
| [[Jakarta Expression Language]] (''EL'') || 2.2 || 3.0 || 3.0
|4.0
|-
| [[Jakarta Debugging Support for Other Languages]] (JSR-45) || 1.0 || 1.0 || 1.0
|2.0
|-
| [[Jakarta Standard Tag Library]] (''JSTL'') || 1.2 || 1.2 || 1.2
|2.0
|-
| [[Jakarta Server Faces]] (''JSF'') || 2.0 || 2.2 || 2.3
|3.0
|-
| [[Jakarta RESTful Web Services]] (''JAX-RS'') || 1.1 || 2.0 || 2.1
|3.0
|-
| [[Jakarta WebSocket]] (''WebSocket'') || {{n/a}} || 1.0 || 1.1
|2.0
|-
| [[Jakarta JSON Processing]] (''JSON-P'') || {{n/a}} || 1.0 || 1.1
|2.0
|-
| [[Jakarta JSON Binding]] || {{n/a}} || {{n/a}} || 1.1
|2.0
|-
| [[Jakarta Annotations]] ([[JSR 250]]) || 1.1 || 1.2 || 1.3
|2.0
|-
| [[Jakarta Enterprise Beans]] (''EJB'') || 3.1 Lite || 3.2 Lite || 3.2 Lite
|4.0 Lite
|-
| [[Jakarta Transactions]] (''JTA'') || 1.1 || 1.2 || 1.2
|2.0
|-
| [[Jakarta Persistence]] (''JPA'') || 2.0 || 2.1 || 2.2
|3.0
|-
| Jakarta [[Bean Validation]] || 1.0 || 1.1 || 2.0
|3.0
|-
| [[Jakarta Managed Beans]] || 1.0 || 1.0 || 1.0
|2.0
|-
| [[Jakarta Interceptors]] || 1.1 || 1.2 || 1.2
|2.0
|-
| Jakarta [[Contexts and Dependency Injection]] (''CDI'') || 1.0 || 1.1 || 2.0
|3.0
|-
| [[Jakarta Dependency Injection]] || 1.0 || 1.0 || 1.0
|2.0
|-
| [[Jakarta Security]] || {{n/a}} || {{n/a}} || 1.0
|2.0
|-
| [[Jakarta Authentication]] || {{n/a}} || 1.0 || 1.1
|2.0
|}

== Certified referencing runtimes ==

Although by definition all Jakarta EE implementations provide the same base level of technologies (namely, the Jakarta EE spec and the associated APIs), they can differ considerably with respect to extra features (like [[Java EE Connector Architecture|connector]]s, [[Computer cluster|clustering]], [[Fault-tolerant design|fault tolerance]], [[high availability]], [[Computer security|security]], etc.), installed size, memory footprint, startup time, etc.

{| class=&quot;wikitable sortable&quot; style=&quot;width: 100%; text-align: center; font-size: smaller; table-layout: fixed;&quot;
|-
!Referencing runtime
!Developer
!Java EE 8 certified – Full
!Java EE 8 certified – Web
!Java EE 7 certified – Full
!Java EE 7 certified – Web
!Java EE 6 certified – Full&lt;br/&gt; Official Oracle page for Java EE Compatibility.
!Java EE 6 certified – Web
!Java EE 5 certified
!J2EE 1.4 certified
!Licensing
|-
| [[GlassFish]] server Open Source Edition
| [[Oracle Corporation|Oracle]]
|{{yes}} v5.0&lt;ref name=&quot;:1&quot;&gt;{{Cite web|url=http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html|title=Java EE Compatibility|website=www.oracle.com|access-date=2018-08-05}}&lt;/ref&gt;
|{{yes}} v5.0&lt;ref name=&quot;:1&quot; /&gt;
| {{yes}} v4.x&lt;ref name=&quot;oracle.com&quot;/&gt;
| {{yes}} v4.x&lt;ref name=&quot;oracle.com&quot;/&gt;
| {{yes}} v3.x and upward&lt;ref name=&quot;glassfishopensourcecomptable&quot;&gt;{{cite web|url=https://glassfish.dev.java.net/public/comparing_v2_and_v3.html|archive-url=https://archive.today/20121220022558/https://glassfish.dev.java.net/public/comparing_v2_and_v3.html|url-status=dead|archive-date=2012-12-20|title=Comparing GlassFish Open Source Edition versions 2.x and 3.0.x}}&lt;/ref&gt;
| {{yes}} v3.x Web Profile
| {{yes}} v2.1.x&lt;ref name=&quot;glassfishopensourcecomptable&quot; /&gt;
|
| {{free|[[Free software]]}}
|-
| Oracle GlassFish Server
| Oracle
|
|
|
|
| {{yes}} v3&lt;ref name=&quot;javaee6compatlist&quot;&gt;{{cite web|url=http://java.sun.com/javaee/overview/compatibility.jsp |title=Java EE Compatibility |publisher=Java.sun.com |date=2010-09-07 |access-date=2012-07-18}}&lt;/ref&gt; based on the open source GlassFish application server
|
| {{yes}} [[Sun Java System Application Server]] v9.0
| {{yes}} [[Sun Java System Application Server]] v8.2
| {{Proprietary|[[Proprietary software]]}}
|-
| [[Oracle WebLogic Server]]
| Oracle
| {{yes}} 14.1.1&lt;ref&gt;{{cite web|url=https://docs.oracle.com/en/middleware/standalone/weblogic-server/14.1.1.0/index.html|title=Oracle Weblogic Server 14.1.1|website=www.oracle.com}}&lt;/ref&gt;
|
| {{yes}} 12.2.1&lt;ref&gt;{{cite web|url=https://www.oracle.com/technetwork/java/javaee/overview/oracleweblogic1211-2769862.html|title=Oracle Weblogic Server 12.1.1|website=www.oracle.com}}&lt;/ref&gt;
|
| {{yes}} v12c&lt;ref&gt;{{cite web |url=http://wcc.on24.com/event/37/57/27/rt/1/documents/player_docanchr_3/weblogic12c_launch_tech_webinar_v8.pdf |title=Oracle Web Logic Server 12c: Developing Modern, Lightweight Java EE 6 Applications |first1=Will|last1=Lyons |first2=Pieter|last2=Humphrey |date=2011 |access-date=2011-12-03 |url-status=dead |archive-url=https://web.archive.org/web/20111215182732/http://wcc.on24.com/event/37/57/27/rt/1/documents/player_docanchr_3/weblogic12c_launch_tech_webinar_v8.pdf |archive-date=2011-12-15 }}&lt;/ref&gt;
|
| {{yes}} v10.3.5.0
| {{yes}} v9
| {{Proprietary|[[Proprietary software]]}}
|-
| [[WildFly]]
| [[Red Hat]]
| {{yes}} v14.x&lt;ref name=&quot;:1&quot; /&gt;
| {{yes}} v14.x&lt;ref name=&quot;:1&quot; /&gt;
| {{yes}} v8.1 &lt;ref&gt;{{cite web|url=https://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html|title=Java EE Compatibility|website=www.oracle.com}}&lt;/ref&gt;
| {{yes}} v8.0.0.Final
| {{yes}} v7.1&lt;ref&gt;{{cite web|url=http://planet.jboss.org/post/jboss_as_7_1_0_final_thunder_released_java_ee_6_full_profile_certified |title=JBoss AS 7.1.0.Final &quot;Thunder&quot; released - Java EE 6 Full Profile certified! &amp;#124; My Wiki &amp;#124; Planet JBoss Community |publisher=Planet.jboss.org |date=2012-02-17 |access-date=2012-07-18}}&lt;/ref&gt;
| {{yes}} v6.0&lt;ref&gt;{{cite web|url=http://www.jboss.org/jbossas|title=JBoss Application Server - JBoss Community}}&lt;/ref&gt; and v7.0&lt;ref&gt;{{cite web|url=http://www.jboss.org/as7|title=JBoss Application Server - JBoss Community}}&lt;/ref&gt;
| {{yes}} v5.1&lt;ref&gt;{{cite web|url=http://java.sun.com/javaee/overview/compatibility.jsp|title=Java EE Compatibility}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://sacha.labourey.com/2008/09/15/jboss-as-is-now-ee5-certified/|title=JBoss AS is now EE5 certified!|date=15 September 2008|access-date=7 August 2016|archive-url=https://web.archive.org/web/20080920223001/http://sacha.labourey.com/2008/09/15/jboss-as-is-now-ee5-certified/|archive-date=20 September 2008|url-status=dead}}&lt;/ref&gt;
| {{yes}} v4.x
| {{free|[[Free software]]}}
|-
| [[JBoss Enterprise Application Platform]]
| [[Red Hat]]
| {{yes}} v7.2 &lt;ref name=&quot;redhat.com&quot;&gt;{{cite web|url=https://middlewareblog.redhat.com/2019/01/22/red-hat-jboss-enterprise-application-platform-7-2-availability/|title=Red Hat JBoss Enterprise Application Platform 7.2 Availability}}&lt;/ref&gt;
|
| {{yes}} v7.0&lt;ref name=&quot;oracle.com&quot;&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html|title=Java EE Compatibility}}&lt;/ref&gt;
| {{yes}} v7.0&lt;ref name=&quot;oracle.com&quot;/&gt;
| {{yes}} v6.0&lt;ref&gt;{{cite web|author=Business Wire |url=http://www.businesswire.com/news/home/20120620005266/en/Red-Hat-Launches-JBoss-Enterprise-Application-Platform |title=Red Hat Launches JBoss Enterprise Application Platform 6 to Help Enterprises Move Application Development and Deployment to the Cloud |publisher=Business Wire |date=2012-06-20 |access-date=2012-07-18}}&lt;/ref&gt;
|
| {{yes}} v5
|
| {{Proprietary|Proprietary software}}
|-
| [[IBM WebSphere Application Server]]
| [[IBM]]
|
|
|{{yes}} v9.x&lt;ref name=&quot;:1&quot; /&gt;
| {{yes}} v9.x&lt;ref name=&quot;oracle.com&quot;/&gt;
| {{yes}} v8&lt;ref&gt;{{cite web|url=http://www.ibm.com/developerworks/websphere/techjournal/1106_alcott/1106_alcott.html |title=What's new in WebSphere Application Server V8 |publisher=Ibm.com |access-date=2012-07-18}}&lt;/ref&gt;
|
| {{yes}} v7
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
| [[IBM WebSphere Application Server|IBM WebSphere Application Server Liberty]]
| [[IBM]]
|{{yes}} v18.0.0.2&lt;ref name=&quot;:0&quot;&gt;{{cite web|url=http://www-01.ibm.com/common/ssi/ShowDoc.wss?docURL=/common/ssi/rep_ca/4/897/ENUS218-354/index.html&amp;lang=en&amp;request_locale=en|title=IBM WebSphere Application Server Liberty delivers the first production-ready, Java EE 8-compatible application server and broadens support for Spring Boot applications|website=IBM|access-date=12 July 2018}}&lt;/ref&gt;
|{{yes}} v18.0.0.2&lt;ref name=&quot;:0&quot; /&gt;
| {{yes}} v8.5.5.6&lt;ref&gt;http://oracle.com/technetwork/java/javaee/overview/waslibertyprofile8556-2587134.html&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://developer.ibm.com/wasdev/blog/2015/06/25/java-ee-7-has-landed-in-was-liberty|title=Java EE 7 has landed in WAS Liberty - WASdev|date=25 June 2015}}&lt;/ref&gt;
| {{yes}} v8.5.5.6&lt;ref name=&quot;oracle.com&quot;/&gt;
|
| {{yes}} v8.5.5&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javaee/community/ibm-javaee6-web-tested-configs-1961333.html|title=IBM Java EE 6 Web Profile Tested Configurations}}&lt;/ref&gt;
|
|
| {{Proprietary|Proprietary software}}
|-
|[https://openliberty.io/ Open Liberty]
|IBM
|{{yes}} v18.0.0.2
|{{yes}} v18.0.0.2
|
|
|
|
|
|
| {{free|Free software}}
|-
| [[IBM WebSphere Application Server Community Edition]]
|[[IBM]]
|
|
|
|
| {{yes}} v3.0
|
| {{yes}} v2.1
|
| {{Proprietary|Proprietary software}}
|-
|[[Apache Geronimo]]
|[[Apache Software Foundation|Apache]]
|
|
|
|
| {{yes}} v3.0-beta-1&lt;ref&gt;{{Cite web|url=http://geronimo.apache.org/|title=Apache Geronimo : Index|date=January 25, 2010|website=geronimo.apache.org}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.h-online.com/open/news/item/Apache-Geronimo-fully-certified-for-Java-EE-6-1378384.html |archive-url=https://web.archive.org/web/20120420064218/http://www.h-online.com/open/news/item/Apache-Geronimo-fully-certified-for-Java-EE-6-1378384.html |archive-date=20 April 2012|title=Apache Geronimo fully certified for Java EE 6 - The H Open: News and Features |publisher=H-online.com |date=2011-11-14 |access-date=2012-07-18}}&lt;/ref&gt;
|
| {{yes}} v2.0
| {{yes}} v1.0
| {{free|Free software}}
|-
| JEUS
| [[TmaxSoft]]
|
|
| {{yes}} v8
|
| {{yes}} v7&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javaee/tmax-javaee6-141684.html |title=Tested Configurations, Java EE 6 - TMAX JEUS 7 |publisher=Oracle.com |date=2010-09-07 |access-date=2012-07-18}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://us.tmaxsoft.com/jsp/product/detailcontents.jsp?psCd=00PD04&amp;menuCd=00PDMSJE |title=Java EE6 Web Application Server, WAS Software |publisher=Us.tmaxsoft.com |access-date=2012-07-18 |url-status=dead |archive-url=https://web.archive.org/web/20120702045326/http://us.tmaxsoft.com/jsp/product/detailcontents.jsp?psCd=00PD04&amp;menuCd=00PDMSJE |archive-date=2012-07-02 }}&lt;/ref&gt;
|
| {{yes}} v6
| {{yes}} v5
| {{Proprietary|Proprietary software}}
|-
| Cosminexus Application Server
| [[Hitachi]]
|
|
|{{yes}} v10.0&lt;ref name=&quot;:1&quot; /&gt;
|
| {{yes}} v9&lt;ref&gt;{{cite web|url=http://oracle.com/technetwork/java/javaee/community/hitachi-compat-1585039.html |title=Java EE 6 - Tested Configurations, Java EE 6 - Hitachi uCosminexus Application Server v9.0|publisher=Oracle.com}}&lt;/ref&gt;
|
|
|
| {{Proprietary|Proprietary software}}
|-
| [[:ja:Interstage|Fujitsu Interstage Application Server]]&lt;ref&gt;{{Cite web|url=http://www.fujitsu.com/global/services/software/windows-azure|archive-url=https://web.archive.org/web/20110810160631/http://www.fujitsu.com/global/services/software/windows-azure/|url-status=dead|title=Fujitsu Interstage Application Server powered by Windows Azure|archive-date=August 10, 2011}}&lt;/ref&gt;
| [[Fujitsu]]
|
|
|{{yes}} v12.0&lt;ref name=&quot;:1&quot; /&gt;
|
| {{yes}} v1 Azure/v10.1&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javaee/community/default-452835.html |title=Tested Configurations, Java EE6 - Fujitsu Interstage |publisher=Oracle.com |date=2010-09-07 |access-date=2012-07-18}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://fujitsu.com/global/about/resources/news/press-releases/2011/1220-02.html|title=Fujitsu Releases Interstage Application Server V10.1|publisher=Fujitsu}}&lt;/ref&gt;
|
| {{yes}}
|
| {{Proprietary|Proprietary software}}
|-
|[[:ja:WebOTX|WebOTX]]
|[[NEC]]
|
|
|
|
| {{yes}}&lt;ref&gt;{{cite web|url=http://www.oracle.com/technetwork/java/javaee/community/nec-webotx-v9x-certification-2002719.html|title=NEC WebOTX Application Server V9.x Certification}}&lt;/ref&gt;
|
| {{yes}}
|
| {{Proprietary|Proprietary software}}
|-
|BES Application Server
|Baolande
|
|
|
|{{yes}} v9.5&lt;ref name=&quot;oracle.com&quot;/&gt;
|
|
|
|
|-
| [[Apache TomEE]]&lt;ref&gt;{{cite web|url=http://openejb.apache.org/3.0/apache-tomee.html |title=Apache TomEE |publisher=Openejb.apache.org |access-date=2012-07-18}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.marketwatch.com/story/the-apache-software-foundation-announces-apache-tomee-certified-as-java-ee-6-web-profile-compatible-2011-10-04 |title=MarketWatch.com |publisher=MarketWatch.com |access-date=2012-07-18}}&lt;/ref&gt;
| [[Apache Software Foundation|Apache]]
|
|
|
| {{no}} 7 (Java EE 7 like, but not certified&lt;ref&gt;{{cite web|url=http://tomee.apache.org/download/tomee-7.0.1.html|title=Apache TomEE 7.0.1|first=Apache|last=TomEE}}&lt;/ref&gt;)
|
| {{yes}}
|
|
| {{free|Free software}}
|-
| [[Resin Server]]
| [[Caucho Technology|Caucho]]
|
|
|
|
|
| {{yes}} v4.0&lt;ref&gt;{{cite web|url=http://www.caucho.com/articles/Caucho_Web%20Profile%20JavaEE6_whitepaper_byRR.pdf|title=Resin Application Server Java EE 6 Web Profile|date=2011|website=caucho.com}}
&lt;/ref&gt;
|
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
| [[Siwpas]]
| [[OW2 Consortium|OW2]]
|
|
|
|
|
| {{yes}} v6.0&lt;ref&gt;{{cite web|url=https://blogs.oracle.com/theaquarium/entry/please_welcome_siwpas_as_java |title=Please Welcome Siwpas as Java EE Certified Option! |publisher=Oracle.com |access-date=2015-12-07}}&lt;/ref&gt;
|
|
| {{free|Free software}}
|-
| [[JOnAS]]
| [[OW2 Consortium|OW2]]
|
|
|
|
|
| {{yes}} v5.3 rc1&lt;ref&gt;{{cite web |url=http://jonas.ow2.org/xwiki/bin/view/Blog/JOnAS+530+RC1+released |title=JOnAS 5.3.0 RC1 released |date=2013-01-07 |website=jonas.ow2.org |access-date=2014-02-25 |url-status=dead |archive-url=https://web.archive.org/web/20131015132408/http://jonas.ow2.org/xwiki/bin/view/Blog/JOnAS+530+RC1+released |archive-date=2013-10-15 }}&lt;/ref&gt;
| {{yes}}
| {{yes}}
| {{free|Free software}}
|-
|[[SAP NetWeaver]]
| [[SAP SE|SAP]]
|
|
|
|
|
| {{yes}} v2.x&lt;ref&gt;{{cite web|url=https://blogs.oracle.com/theaquarium/entry/sap_netweaver_cloud_java_ee|title=SAP NetWeaver Cloud Java EE 6 Web Profile Certified! (The Aquarium)}}&lt;/ref&gt;
| {{yes}}
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
|[[OC4J|Oracle Containers for Java EE]]
| Oracle
|
|
|
|
|
|
| {{yes}}
|
| {{Proprietary|Proprietary software}}
|-
| [[Oracle iPlanet Web Server]]
| Oracle
|
|
|
|
|
|
|
| {{yes}} Sun Java System Web Server
| {{Proprietary|Proprietary software}}
|-
|[[Oracle Application Server 10g]]
| Oracle
|
|
|
|
|
|
|
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
| Pramati Server
|Pramati Technologies
|
|
|
|
|
|
|
| {{yes}} v5.0
| {{Proprietary|Proprietary software}}
|-
| Trifork T4
| [[Trifork]]
|
|
|
|
|
|
|
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
| Sybase Enterprise Application Server&lt;ref&gt;{{cite web|url=http://www.sybase.com/products/modelingdevelopment/easerver|title=SAP Software Solutions - Business Applications and Technology}}&lt;/ref&gt;
|[[Sybase]]
|
|
|
|
|
|
|
| {{yes}}
| {{Proprietary|Proprietary software}}
|-
|}

==Code sample==

The code sample shown below demonstrates how various technologies in Java EE 7 are used together to build a web form for editing a user.

In Jakarta EE a (web) UI can be built using [[Jakarta Servlet]], [[Jakarta Server Pages]] (''JSP''), or [[Jakarta Server Faces]] (''JSF'') with [[Facelets]]. The example below uses JSF and [[Facelets]]. Not explicitly shown is that the input components use the Jakarta EE Bean Validation API under the covers to validate constraints.

&lt;syntaxhighlight lang=&quot;xml&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
      xmlns:h=&quot;http://xmlns.jcp.org/jsf/html&quot; xmlns:f=&quot;http://xmlns.jcp.org/jsf/core&quot;&gt;

    &lt;f:metadata&gt;
        &lt;f:viewParam name=&quot;user_id&quot; value=&quot;#{userEdit.user}&quot; converter=&quot;#{userConvertor}&quot; /&gt;
    &lt;/f:metadata&gt;

    &lt;h:body&gt;

        &lt;h:messages /&gt;

        &lt;h:form&gt;
            &lt;h:panelGrid columns=&quot;2&quot;&gt;
                &lt;h:outputLabel for=&quot;firstName&quot; value=&quot;First name&quot; /&gt;
                &lt;h:inputText id=&quot;firstName&quot; value=&quot;#{userEdit.user.firstName}&quot; label=&quot;First name&quot; /&gt;

                &lt;h:outputLabel for=&quot;lastName&quot; value=&quot;Last name&quot; /&gt;
                &lt;h:inputText id=&quot;lastName&quot; value=&quot;#{userEdit.user.lastName}&quot; label=&quot;Last name&quot; /&gt;

                &lt;h:commandButton action=&quot;#{userEdit.saveUser}&quot; value=&quot;Save&quot; /&gt;
            &lt;/h:panelGrid&gt;
        &lt;/h:form&gt;

    &lt;/h:body&gt;
&lt;/html&gt;
&lt;/syntaxhighlight&gt;

===Example Backing Bean class ===

To assist the view, Jakarta EE uses a concept called a &quot;Backing Bean&quot;. The example below uses [http://jcp.org/en/jsr/detail?id=299 Contexts and Dependency Injection (CDI)] and [[Jakarta Enterprise Beans]] (''EJB'').

&lt;syntaxhighlight lang=&quot;java&quot;&gt;
@Named
@ViewScoped
public class UserEdit {

    private User user;

    @Inject
    private UserDAO userDAO;

    public String saveUser() {
        userDAO.save(this.user);
        addFlashMessage(&quot;User &quot; + this.user.getId() + &quot; saved&quot;);

        return &quot;users.xhtml?faces-redirect=true&quot;;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public User getUser() {
        return user;
    }
}
&lt;/syntaxhighlight&gt;

===Example Data Access Object class===

To implement business logic, [[Jakarta Enterprise Beans]] (''EJB'') is the dedicated technology in Jakarta EE. For the actual persistence, [[JDBC]] or [[Jakarta Persistence]] (JPA) can be used. The example below uses EJB and JPA. Not explicitly shown is that [[Java Transaction API|JTA]] is used under the covers by EJB to control transactional behavior.

&lt;syntaxhighlight lang=&quot;java&quot;&gt;
@Stateless
public class UserDAO {

    @PersistenceContext
    private EntityManager entityManager;

    public void save(User user) {
        entityManager.persist(user);
    }

    public void update(User user) {
        entityManager.merge(user);
    }

    public List&lt;User&gt; getAll() {
        return entityManager.createNamedQuery(&quot;User.getAll&quot;, User.class)
                            .getResultList();
    }

}
&lt;/syntaxhighlight&gt;

===Example Entity class===

For defining entity/model classes Jakarta EE provides the Jakarta Persistence (''JPA''), and for expressing constraints on those entities it provides the Bean Validation API. The example below uses both these technologies.

&lt;syntaxhighlight lang=&quot;java&quot;&gt;
@Entity
public class User {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    private Integer id;

    @Size(min = 2, message=&quot;First name too short&quot;)
    private String firstName;

    @Size(min = 2, message=&quot;Last name too short&quot;)
    private String lastName;

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
